%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.54.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 732 20
%%HiResBoundingBox: 0 0 731.287 19.246
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ARSECX+LMRoman10-Regular
16 dict begin
/FontName /ARSECX+LMRoman10-Regular_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-430 -290 1417 1127] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
dup 87 /c57 put
dup 88 /c58 put
dup 89 /c59 put
dup 90 /c5a put
dup 91 /c5b put
dup 92 /c5c put
dup 93 /c5d put
dup 94 /c5e put
dup 95 /c5f put
dup 96 /c60 put
dup 97 /c61 put
dup 98 /c62 put
dup 99 /c63 put
dup 100 /c64 put
dup 101 /c65 put
dup 102 /c66 put
dup 103 /c67 put
dup 104 /c68 put
dup 105 /c69 put
dup 106 /c6a put
dup 107 /c6b put
dup 108 /c6c put
dup 109 /c6d put
dup 110 /c6e put
dup 111 /c6f put
dup 112 /c70 put
dup 113 /c71 put
dup 114 /c72 put
dup 115 /c73 put
dup 116 /c74 put
dup 117 /c75 put
dup 118 /c76 put
dup 119 /c77 put
dup 120 /c78 put
dup 121 /c79 put
122 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FA6B0AF338BD4E48F07258C8AB349EE790EF474E6D540CD5017BDA227D234CDE
C5B56059723DE2D25E43567EA970111F9099EFA91396AD179BEECC68CE62455C
2A12EE48EDABA012CC8A5481822B2C11FC74EEBE5D3DA05BE21FC8AE2FEFE4AD
983506712B8ACDE3A061C03B58F71C5891EA5110035AE6784194758ACE2015E6
17BB845C059ABEE6B1082AFBDC2BB42FFCAEEE0B59841E7C9214F9096CA6CBA9
142671BB17558E33C4474A06282677E09E3885A1C003C2A6DD3A6F88E1A52A73
5A1054331B8A1523EEBF4E5016375DD16970A3BD4A08CEFA9C5CE9AF8AB63E5F
4CB0CADD898F710C2496E4ED4A09D54FA74709C83B0824F96BC972F4FD3D6E6F
0154938997BD3BCC0C7675FF515827033C405D61C353DC2E204B80E6D294B4E3
3710F009F10A04C197F1683B18D7E32957D737350D4560FFCD524780D91DB13E
91E4A9C0C22C1F370FC2CBE608EA0C6D841B4194EA40F2F7DCA9D97C765FDAC2
36F6DBD3CFF21D2648F35C00F572B0F5754EB0949789562413816269C3719527
C75CFC3485A4644DD991C2813C31575DE9161BD194092CCDBA944BD6A6B87191
0D759F56AB0453D41E1B7F61299202CDECD68F7659A21B5A78F11289AE640CD8
9068A83486916A5A88DCE57D4E942A1134F86148EF70F0BF21E655F3115ED1A0
BD9CF4672ED7E84F91E9A1554980A82B3C11AA6499F28EF7F732DD18F5AD2084
561D52A26479585DEEC9398FBAFFE8910B7447FE1585A27B18078B8A99B7903B
B6938FB38ABCC6CCDDAC579D2FD6E79FF9D4EBCD4D1535F3EAF13A0435907716
DD2A0648A4D4ED5786D1FFE4DB3B7D30E132286B6D0FE3D4EC734D2B26849832
BE2B381E4A843C20CD83664DAF5A88213625DEE424A1534855C256CFE40F6DC9
0668DEE14759745DBEDEE4AC95B3A89EC3A7610BFD721196077D4A1DB3167D66
B8E36B480C9D08249EFE421127AB845CCA1B9376BECAF8478D0F5D7C938A39AF
32E632DBA1191A43A91ADFEF950B38826AB55271684F74DAFB5C409ABC9A021F
788D414D6BD94BCB93408832F56E37B95F73CA5A81148863FA04084893265AB9
BB1DAA478129E81F43F32D1472D37DDBC8E7D6384C2F416BC92BE1197352F974
42540892F3BA61E8D3EAABC92EF11E25164594391617211E1EC5643BD6D9E820
87F381F6520038F377DA9AAD303E5C5EC97B77E87047979C9353B07DA7928114
EC4B2BAE94A132326BDA3982AD7727766D2807A704CE305A66DB16F8DA33BE3B
B8DAE49E51E65912950A8CAC9A1ADCD5DE6BD8B37E56DAF1AE1A1890CA493DCC
EA69F7BF403B0E99F6EF3510B2736307ECA356F42BE0F920D639CE37463689DD
1A6176CF0727922AA0E61B5CC7597D98481AE3F02FC1875835D7852FB1EAFA98
9B3ECDEBD5D189783873C5F2E863F59844CF6EED0893D1F9AA511F0D11A39C17
62FDB36C6A176F25112CA58ED1713E0F4EFA56F6F0099E6D288B3BC2F3C7C399
255295EB46D06A2B3514EF6679B0BF117002C26F7F732A25803D98736C9B1002
D0DE2458547158667EB7C675A2A6A65F4B5C735808F9B58844ACE93ADEF8F337
6805C14B39E559BC2767588305836A704D325F89FC4864E0FCEEA15E16E982F2
21365FA02E3CB66025F45AFD659368A738E401BAF24DCF81095BCB1A5A2C1F8A
E5F246B0596149353B08F1098A1A61890794DB26F93A56559C6BB5E0482D5D01
739C3D0DDAAC229D9D52B0167007631981752AEF0E50F5E3ABDA8E35DE07843A
206D89B6B6906F724AB8A380BDF215914E98AF93C1197C30DFB8304935D0EE7E
D100EC2DF4A560806440D642C3C933980F8ED541EBB980BAB3B00C4807313FE3
9A5B0FD593C2DEDB1FB59D7C09059A7DCBAC833F6C7805A6535B0BDC92959370
65283799560E904F08325577525EDA0A4B5510DC33AB4001BCE40C788388C418
D98F7EE6049B4C367C3D9EDD134F12444A6C4CD980734034E9111872CA5F5FEB
3F6A9E80090AF845955C766EFA2FAFC558DC0863BE2115AACAE37FD2CCABE08C
1923AD72FDE5D66B1837944E445AD6A04896E20161BF3DC408B822409EFC9447
CA28F8D8BCFA9263232C5E97DB53BCC38DBBE5A996DCF2CB7CD8713DF87CA071
8813E5E0227B6083C8D0BCA97586B2F32E61A0BEEC8DDD2796BD98789F7E37AF
EBD235B8436ED5CAE236842E00963B545665137F626A6DCFD9671AC9EEF88883
AA1147B071A793FCB4ECDE3F7E9F8BA1EDA20AFEA15C8F38836D3AB3E48D64C9
F24F9C3A2F3C871BDBB144FF85801D5C1069AE8E5E3F37FE41DA6F8FAF26A0A1
275A2A8F06D69D3225033623FA7F450819089467CFC4FAC88CDB63475E6CE0AD
51701FF0709D847696742B64DD728B626DA18EDB172B9C83366119F897829C71
95E533556B79B418BAE368AADB2D2C9F3299C408C9CF9CF5A97571F87FB5BCE0
700E3B4451937FA47EF19AF11BF6B128ADAE0D29A14118CC37F2F3913DD1A0B6
DD47415957969610DA4C410A288090B9CFCE16AA2C682485E535FE329DEFBB66
668B5D807354DC0BEA3F227D81D2F3546BEE7BC2140E83A96D665B63957ADE08
2CD8BB84225A86CA49EB1A7FC2F0A46C13DBAEE384F3A0374451BE63B320F051
C14F4CB9F7365671B87D9408F371E28FC0A2210B6EDF471C65F139A491ECACE7
6547C55251913DE8E227112E983144EEDA4B49ACA9D382557B316F327CF6D59A
002BD6296E17B80BCBF3390125FAC18B946EB738DB00AFA3480E578F98A32B1F
B665CFD1D0F723E571A0731DA32E0EBE27D3800DAFBB497EBED8B7C8160F3A38
9BBCEC5A824796BFA03EFAE6BB027CED39F7FC6B3E90CC3227C7F2F6CD7C66F0
33E26AB782615D37E849BCB83D9BE5C016EEC5E3455DDBE9485B49C0FBA7A22F
BB43554E28E25647EB2633AE1124D41D0C41A0B4277041471FAEA3A49EFA1132
A997CBFCBBF3C6E12127713F44F926865F35AFF49DAF619ABA4D0FCD249C0800
7C2B63842661ED31AEEED885C2D0B3EF178A02F41EC04A77EEA1255F949785F5
4C74
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /ARSECX+LMRoman10-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/ARSECX+LMRoman10-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F7_0 /ARSECX+LMRoman10-Regular 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 731.287 19.246 re
W
q
[1 0 0 1 9.603 9.623] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
q
Q
q
Q
q
Q
q
Q
q
Q
q
Q
q
Q
q
Q
q
Q
q
q
9.10347 0 m
79.51224 0 l
S
q
[1 0 0 1 79.51224 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
21.95638 -4.47826 45.16121 8.95651 re
f
Q
q
[1 0 0 1 22.953 -3.263] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -32.556 -6.36] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.556 6.36] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000@\000k\0009\0009\0009\000N\000d\000d\0008)
[3.317559
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 32.556 6.36] cm
Q
[1 0 0 1 -22.953 3.263] cm
Q
Q
Q
q
97.97899 0 m
168.38776 0 l
S
q
[1 0 0 1 168.38776 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
110.8319 -4.47826 45.16121 8.95651 re
f
Q
q
[1 0 0 1 111.827 -3.263] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -121.43 -6.36] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 121.43 6.36] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000@\0009\000N\000j\000N\000j\000R\000R\000N)
[3.317559
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 121.43 6.36] cm
Q
[1 0 0 1 -111.827 3.263] cm
Q
Q
Q
q
186.85454 0 m
257.26329 0 l
S
q
[1 0 0 1 257.26329 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
199.70744 -4.47826 45.16121 8.95651 re
f
Q
q
[1 0 0 1 200.701 -3.263] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -210.304 -6.36] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 210.304 6.36] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000@\000k\0009\000N\000d\000R\0008\000j\000e)
[3.317559
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 210.304 6.36] cm
Q
[1 0 0 1 -200.701 3.263] cm
Q
Q
Q
q
275.92853 0 m
346.3373 0 l
S
q
[1 0 0 1 346.3373 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
307.87508 -4.73232 6.97394 9.46463 re
f
Q
q
[1 0 0 1 308.868 -3.736] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -318.471 -5.887] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 318.471 5.887] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000 )
[4.98132
0] Tj
[1 0 0 1 318.471 5.887] cm
Q
[1 0 0 1 -308.868 3.736] cm
Q
Q
Q
q
364.85759 0 m
435.26636 0 l
S
q
[1 0 0 1 435.26636 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
377.7105 -4.47826 45.16121 8.95651 re
f
Q
q
[1 0 0 1 378.702 -3.263] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -388.305 -6.36] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 388.305 6.36] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000@\000k\0009\000N\000N\000d\0003\0003\0009)
[3.317559
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 388.305 6.36] cm
Q
[1 0 0 1 -378.702 3.263] cm
Q
Q
Q
q
453.93158 0 m
524.34035 0 l
S
q
[1 0 0 1 524.34035 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
485.87813 -4.73232 6.97394 9.46463 re
f
Q
q
[1 0 0 1 486.868 -3.736] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -496.471 -5.887] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 496.471 5.887] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000 )
[4.98132
0] Tj
[1 0 0 1 496.471 5.887] cm
Q
[1 0 0 1 -486.868 3.736] cm
Q
Q
Q
q
543.00558 0 m
613.41435 0 l
S
q
[1 0 0 1 613.41435 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
555.85849 -4.47826 45.16121 8.95651 re
f
Q
q
[1 0 0 1 556.848 -3.263] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -566.451 -6.36] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 566.451 6.36] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000@\000k\0009\000N\0003\0008\000e\0009\0009)
[3.317559
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 566.451 6.36] cm
Q
[1 0 0 1 -556.848 3.263] cm
Q
Q
Q
q
632.119 0 m
702.52777 0 l
S
q
[1 0 0 1 702.52777 0] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
664.06555 -4.73232 6.97394 9.46463 re
f
Q
q
[1 0 0 1 665.054 -3.736] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -674.657 -5.887] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 674.657 5.887] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000 )
[4.98132
0] Tj
[1 0 0 1 674.657 5.887] cm
Q
[1 0 0 1 -665.054 3.736] cm
Q
Q
Q
q
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.49 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -7.113 -6.415] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.113 6.415] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000y)
[4.98132
0] Tj
[1 0 0 1 7.113 6.415] cm
Q
[1 0 0 1 2.49 3.208] cm
Q
Q
Q
q
[1 0 0 1 88.974 0] cm
[1 0 0 1 0 0] cm
q
8.80498 0 m
8.80498 4.86292 4.86292 8.80498 0 8.80498 c
-4.86292 8.80498 -8.80498 4.86292 -8.80498 0 c
-8.80498 -4.86292 -4.86292 -8.80498 0 -8.80498 c
4.86292 -8.80498 8.80498 -4.86292 8.80498 0 c
h
S
q
[1 0 0 1 -2.491 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -96.086 -6.306] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 96.086 6.306] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000R)
[4.98132
0] Tj
[1 0 0 1 96.086 6.306] cm
Q
[1 0 0 1 2.491 3.317] cm
Q
Q
[1 0 0 1 -88.974 0] cm
Q
q
[1 0 0 1 177.848 0] cm
[1 0 0 1 0 0] cm
q
8.80498 0 m
8.80498 4.86292 4.86292 8.80498 0 8.80498 c
-4.86292 8.80498 -8.80498 4.86292 -8.80498 0 c
-8.80498 -4.86292 -4.86292 -8.80498 0 -8.80498 c
4.86292 -8.80498 8.80498 -4.86292 8.80498 0 c
h
S
q
[1 0 0 1 -2.49 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -184.961 -6.306] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 184.961 6.306] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000k)
[4.98132
0] Tj
[1 0 0 1 184.961 6.306] cm
Q
[1 0 0 1 2.49 3.317] cm
Q
Q
[1 0 0 1 -177.848 0] cm
Q
q
[1 0 0 1 266.822 0] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.491 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -273.934 -6.415] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 273.934 6.415] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000j)
[4.98132
0] Tj
[1 0 0 1 273.934 6.415] cm
Q
[1 0 0 1 2.491 3.208] cm
Q
Q
[1 0 0 1 -266.822 0] cm
Q
q
[1 0 0 1 355.822 0] cm
[1 0 0 1 0 0] cm
q
8.83174 0 m
8.83174 4.87769 4.87769 8.83174 0 8.83174 c
-4.87769 8.83174 -8.83174 4.87769 -8.83174 0 c
-8.83174 -4.87769 -4.87769 -8.83174 0 -8.83174 c
4.87769 -8.83174 8.83174 -4.87769 8.83174 0 c
h
S
q
[1 0 0 1 -2.49 -3.372] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -362.935 -6.251] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 362.935 6.251] Tm
0 0 Td
/F7_0 9.96264 Tf
(\0009)
[4.98132
0] Tj
[1 0 0 1 362.935 6.251] cm
Q
[1 0 0 1 2.49 3.372] cm
Q
Q
[1 0 0 1 -355.822 0] cm
Q
q
[1 0 0 1 444.823 0] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.491 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -451.935 -6.415] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 451.935 6.415] Tm
0 0 Td
/F7_0 9.96264 Tf
(\0008)
[4.98132
0] Tj
[1 0 0 1 451.935 6.415] cm
Q
[1 0 0 1 2.491 3.208] cm
Q
Q
[1 0 0 1 -444.823 0] cm
Q
q
[1 0 0 1 533.896 0] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.491 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -541.008 -6.415] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 541.008 6.415] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000e)
[4.98132
0] Tj
[1 0 0 1 541.008 6.415] cm
Q
[1 0 0 1 2.491 3.208] cm
Q
Q
[1 0 0 1 -533.896 0] cm
Q
q
[1 0 0 1 622.988 0] cm
[1 0 0 1 0 0] cm
q
8.92392 0 m
8.92392 4.92859 4.92859 8.92392 0 8.92392 c
-4.92859 8.92392 -8.92392 4.92859 -8.92392 0 c
-8.92392 -4.92859 -4.92859 -8.92392 0 -8.92392 c
4.92859 -8.92392 8.92392 -4.92859 8.92392 0 c
h
S
q
[1 0 0 1 -2.49 -3.258] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -630.101 -6.365] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 630.101 6.365] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000d)
[4.98132
0] Tj
[1 0 0 1 630.101 6.365] cm
Q
[1 0 0 1 2.49 3.258] cm
Q
Q
[1 0 0 1 -622.988 0] cm
Q
q
[1 0 0 1 712.081 0] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.491 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -719.193 -6.415] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 719.193 6.415] Tm
0 0 Td
/F7_0 9.96264 Tf
(\0003)
[4.98132
0] Tj
[1 0 0 1 719.193 6.415] cm
Q
[1 0 0 1 2.491 3.208] cm
Q
Q
[1 0 0 1 -712.081 0] cm
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ARSECX+LMRoman10-Regular
%%EOF
