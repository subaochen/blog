%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.54.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 376 105
%%HiResBoundingBox: 0 0 375.3 104.246
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font AEXWXS+LMRoman10-Regular
16 dict begin
/FontName /AEXWXS+LMRoman10-Regular_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-430 -290 1417 1127] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
dup 87 /c57 put
dup 88 /c58 put
dup 89 /c59 put
dup 90 /c5a put
dup 91 /c5b put
dup 92 /c5c put
dup 93 /c5d put
dup 94 /c5e put
dup 95 /c5f put
dup 96 /c60 put
dup 97 /c61 put
dup 98 /c62 put
dup 99 /c63 put
dup 100 /c64 put
dup 101 /c65 put
dup 102 /c66 put
dup 103 /c67 put
dup 104 /c68 put
dup 105 /c69 put
dup 106 /c6a put
dup 107 /c6b put
dup 108 /c6c put
dup 109 /c6d put
dup 110 /c6e put
dup 111 /c6f put
dup 112 /c70 put
dup 113 /c71 put
dup 114 /c72 put
dup 115 /c73 put
dup 116 /c74 put
dup 117 /c75 put
dup 118 /c76 put
dup 119 /c77 put
dup 120 /c78 put
dup 121 /c79 put
122 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FA6B0AF338BD4E48F07258C8AB349EE790EF474E6D540CD5017BDA227D234CDE
C5B56059723DE2D25E43567EA970111F9099EFA91396AD179BEECC68CE62455C
2A12EE48EDABA012CC8A5481822B2C11FC74EEBE5D3DA05BE21FC8AE2FEFE4AD
983506712B8ACDE3A061C03B58F71C5891EA5110035AE6784194758ACE2015E6
17BB845C059ABEE6B1082AFBDC2BB42FFCAEEE0B59841E7C9214F9096CA6CBA9
142671BB17558E33C4474A06282677E09E3885A1C003C2A6DD3A6F88E1A52A73
5A1054331B8A1523EEBF4E5016375DD16970A3BD4A08CEFA9C5CE9AF8AB63E5F
4CB0CADD898F710C2496E4ED4A09D54FA74709C83B0824F96BC972F4FD3D6E6F
0154938997BD3BCC0C7675FF515827033C405D61C353DC2E204B80E6D294B4E3
3710F009F10A04C197F1683B18D7E32957D737350D4560FFCD524780D91DB13E
91E4A9C0C22C1F370FC2CBE608EA0C6D841B4194EA40F2F7DCA9D97C765FDAC2
36F6DBD3CFF21D2648F35C00F572B0F5754EB0949789562413816269C3719527
C75CFC3485A4644DD991C2813C31575DE9161BD194092CCDBA944BD6A6B87191
0D759F56AB0453D41E1B7F61299202CDECD68F7659A21B5A78F11289AE640CD8
9068A83486916A5A88DCE57D4E942A1134F86148EF70F0BF21E655F3115ED1A0
BD9CF4672ED7E84F91E9A1554980A82B3C11AA6499F28EF7F732DD18F5AD2084
561D52A26479585DEEC9398FBAFFE8910B7447FE1585A27B18078B8A99B7903B
B6938FB38ABCC6CCDDAC579D2FD6E79FF9D4EBCD4D1535F3EAF13A0435907716
DD2A0648A4D4ED5786D1FFE4DB3B7D30E132286B6D0FE3D4EC734D2B26849832
BE2B381E4A843C20CD83664DAF5A88213625DEE424A1534855C256CFE40F6DC9
0668DEE14759745DBEDEE4AC95B3A89EC3A7610BFD721196077D4A1DB3167D66
B8E36B480C9D08249EFE421127AB845CCA1B9376BECAF8478D0F5D7C938A39AF
32E632DBA1191A43A91ADFEF950B38826AB55271684F74DAFB5C409ABC9A021F
788D414D6BD94BCB93408832F56E37B95F73CA5A81148863FA04084893265AB9
BB1DAA478129E81F43F32D1472D37DDBC8E7D6384C2F416BC92BE1197352F974
42540892F3BA61E8D3EAABC92EF11E25164594391617211E1EC5643BD6D9E820
87F381F6520038F377DA9AAD303E5C5EC97B77E87047979C9353B07DA7928114
EC4B2BAE94A132326BDA3982AD7727766D2807A704CE305A66DB16F8DA33BE3B
B8DAE49E51E65912950A8CAC9A1ADCD5DE6BD8B37E56DAF1AE1A1890CA493DCC
EA69F7BF403B0E99F6EF3510B2736307ECA356F42BE0F920D639CE37463689DD
1A6176CF0727922AA0E61B5CC7597D98484F5F7B8F8C11F4DC6A57F253526FC4
0F1A286EB7B735856124A6B4C5BF70BDA5A5523224520B1ABC6FD67405EFC903
575F5C06CE8A0096F176355B1A4B9C337012C37AC2232C0C70011F1CC13B13D9
22EB47D91DF55C4C923008E3BD9876547D89B67BFE9BF4EDB5BB19CA74B3E28B
FD575D2AC02CFAD849DF15F9208BB007AC3D6137CAECD80F37348B8A56B3C761
9D65DC2FF58CBF1401435AD22AC9A8DD80C77633557628F74126E8D223247496
B66BAEA1AFA2DA0245A337E8CADBFA553A927C8A9FE2573362E13EC3ACB96FD5
9990F99396F03C2B2DFB25D36F923B6B2C7FC914E89497ED3B029165308F735E
271D34F030761BE0915117DD6CEA80E2D31B8B4B61792F9CEB7058D5E43AA5F2
D85B287867899B7D817823AF90CCD814DBEBF35E5030DCA9B353E98FA49836A0
DB2B4FC0921B37950E94A5FE322CD51CE6B4D903A97FA260D1ACBACC6E167DF3
71D3B72C6D90F072BD482C311C4816AB66282D17708F77BBB1C005E895B0E288
29C72E892619EB45ACF2F274B0500719512E3C150736DF0A793D57594F649433
795B6835DDC5A11DF0D69F2791690BCFC0635BDF04651FFB9CF4582343398CAF
198265FC0A1656E0F9F910E4FC10596B1C068A4C78E6565C4CDCA4830304BFA8
08595F87E6BFF82220F0E2D1B10F50439D8CDE5F7012EA62596C7E450998A468
18891B6A8608A26646D0017C02CC973F242BC0136235BA6EECCB3469E222AF0D
17D21F7F7DF991F373ABF0875B3FC74AF0C36639F79CCE8ECF800C65BB7EED8A
ED56020194BC09A806E5927F82C9BE47AEC90C9E21F99FFA3B3CBDB867577FEE
E3361411C5FAAB0E142991E3328C2EB451EFDFEB6DF618E0F139A4E034FFE17B
268C817F135B47EB0E44F5DE3CE21597A4B467761E89C128ED4674DED01F07EE
5C811246E6B28ADE67AA08BBD419D3C6BFF22D991CC5C269815A60C758FA7EBB
280E0D32E042C92F94BDA66BD791E24786E0D668BB32EA2CCC3855FBD02A14FE
DEB07C225C76F43C3DD7FEBDAABE45E0017C511B1F01CA84C37C61BED94B5FEF
1051BDB1AED1E32E5F41F9D94F9EA63D2BBF6DCF498487426B0C978A01FF79AA
761EFEB0A707563034B2FC906008CFF938A2EC338D3D07047993909DF0F88610
77193362AF0D1E2C2E14053167F061509E431D4828011A1750690FF8777BFC1B
80F5E523AED0CABAF852E3C3F3660B57B5BFCEDFFD1BBA815129577FBD2EDC0D
05BA228151C9B1DD30D4CB93D4BD9FF31A26F3121478D01486343EA5A252E0B2
489192A6D0F75D81E4A964D201B1E2FC8491DCF8BAE9A474430F5A0EBBEE7DB5
A18BA5836D170C344E0982EAA73F5E155DF9EA2BB334A5DBB9689FC2B8302B73
A9A6C94A89E58442CA9FC2F6963E00
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /AEXWXS+LMRoman10-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/AEXWXS+LMRoman10-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F7_0 /AEXWXS+LMRoman10-Regular 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 375.3 104.246 re
W
q
[1 0 0 1 9.603 52.123] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
q
Q
q
Q
q
Q
q
Q
q
Q
q
Q
q
Q
q
q
8.21559 3.92616 m
80.43394 38.43864 l
S
q
[0.90503 0.43253 -0.43253 0.90503 80.43394 38.43863] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
57.04544 32.17952 m
28.19234 18.39024 l
32.01886 10.3835 l
60.87196 24.17279 l
57.04544 32.17952 l
h
f
Q
q
[1 0 0 1 32.395 11.914] cm
[0.90503 0.43253 -0.43253 0.90503 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -41.998 -64.037] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 41.998 64.037] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000j\0003\0008\0003\000k\000R)
[4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 41.998 64.037] cm
Q
[1 0 0 1 -32.395 -11.914] cm
Q
Q
Q
q
97.97899 42.52022 m
168.38776 42.52022 l
S
q
[1 0 0 1 168.38776 42.52022] cm
q
0.31879 w
[] 0 d
1 J
1 j
-1.19551 1.59401 m
-1.09587 0.99626 0 0.09961 0.29886 0 c
0 -0.09961 -1.09587 -0.99626 -1.19551 -1.59401 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
119.96277 38.09674 26.89948 8.84694 re
f
Q
q
[1 0 0 1 120.958 39.312] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -130.561 -91.435] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 130.561 91.435] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000R\0008\000e\000j\000e)
[4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 130.561 91.435] cm
Q
[1 0 0 1 -120.958 -39.312] cm
Q
Q
Q
q
q
1.19553 w
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
8.21559 -3.92616 m
79.98312 -38.22319 l
S
q
[0.90503 -0.43253 0.43253 0.90503 79.98312 -38.22318] cm
q
0.9564 w
[] 0 d
1 J
1 j
-1.91284 2.55046 m
-1.75343 1.59402 0 0.15938 0.4782 0 c
0 -0.15938 -1.75343 -1.59402 -1.91284 -2.55046 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
56.36366 -22.01819 m
36.52716 -12.53806 l
32.70064 -20.54478 l
52.53716 -30.02492 l
56.36366 -22.01819 l
h
f
Q
q
[1 0 0 1 34.128 -19.875] cm
[0.90503 -0.43253 0.43253 0.90503 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -43.731 -32.248] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 43.731 32.248] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000k\000e\000y\000y)
[4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 43.731 32.248] cm
Q
[1 0 0 1 -34.128 19.875] cm
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
Q
q
q
1.19553 w
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
97.97899 -42.52022 m
167.96211 -42.52022 l
S
q
[1 0 0 1 167.96211 -42.52022] cm
q
0.9564 w
[] 0 d
1 J
1 j
-1.91284 2.55046 m
-1.75343 1.59402 0 0.15938 0.4782 0 c
0 -0.15938 -1.75343 -1.59402 -1.91284 -2.55046 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
124.9804 -46.94368 16.9367 8.84694 re
f
Q
q
[1 0 0 1 125.975 -45.728] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -135.578 -6.395] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 135.578 6.395] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000R\000e\000N)
[4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 135.578 6.395] cm
Q
[1 0 0 1 -125.975 45.728] cm
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
Q
q
q
1.19553 w
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
186.98053 -42.52022 m
256.96364 -42.52022 l
S
q
[1 0 0 1 256.96364 -42.52022] cm
q
0.9564 w
[] 0 d
1 J
1 j
-1.91284 2.55046 m
-1.75343 1.59402 0 0.15938 0.4782 0 c
0 -0.15938 -1.75343 -1.59402 -1.91284 -2.55046 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
206.50986 -46.99847 31.88086 8.95651 re
f
Q
q
[1 0 0 1 207.504 -45.782] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -217.107 -6.341] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 217.107 6.341] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000R\000N\0009\000y\0009\000R)
[4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0
4.98132
0] Tj
[1 0 0 1 217.107 6.341] cm
Q
[1 0 0 1 -207.504 45.782] cm
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
Q
q
q
1.19553 w
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
276.12701 -42.52022 m
346.03764 -42.52022 l
S
q
[1 0 0 1 346.03764 -42.52022] cm
q
0.9564 w
[] 0 d
1 J
1 j
-1.91284 2.55046 m
-1.75343 1.59402 0 0.15938 0.4782 0 c
0 -0.15938 -1.75343 -1.59402 -1.91284 -2.55046 c
S
Q
Q
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
/DeviceGray {} cs
[1] sc
308.07356 -47.25253 6.97394 9.46463 re
f
Q
q
[1 0 0 1 309.066 -46.256] cm
[1 0 0 1 0 0] cm
q
/DeviceRGB {} CS
[1 0.5 0] SC
/DeviceRGB {} cs
[1 0.5 0] sc
[1 0 0 1 -318.669 -5.867] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 318.669 5.867] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000 )
[4.98132
0] Tj
[1 0 0 1 318.669 5.867] cm
Q
[1 0 0 1 -309.066 46.256] cm
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
Q
q
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.49 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -7.113 -48.915] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.113 48.915] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000y)
[4.98132
0] Tj
[1 0 0 1 7.113 48.915] cm
Q
[1 0 0 1 2.49 3.208] cm
Q
Q
Q
q
[1 0 0 1 88.974 42.52] cm
[1 0 0 1 0 0] cm
q
8.80498 0 m
8.80498 4.86292 4.86292 8.80498 0 8.80498 c
-4.86292 8.80498 -8.80498 4.86292 -8.80498 0 c
-8.80498 -4.86292 -4.86292 -8.80498 0 -8.80498 c
4.86292 -8.80498 8.80498 -4.86292 8.80498 0 c
h
S
q
[1 0 0 1 -2.491 -3.318] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -96.086 -91.325] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 96.086 91.325] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000R)
[4.98132
0] Tj
[1 0 0 1 96.086 91.325] cm
Q
[1 0 0 1 2.491 3.318] cm
Q
Q
[1 0 0 1 -88.974 -42.52] cm
Q
q
[1 0 0 1 177.948 42.52] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.491 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -185.06 -91.435] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 185.06 91.435] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000j)
[4.98132
0] Tj
[1 0 0 1 185.06 91.435] cm
Q
[1 0 0 1 2.491 3.208] cm
Q
Q
[1 0 0 1 -177.948 -42.52] cm
Q
q
[1 0 0 1 88.974 -42.52] cm
[1 0 0 1 0 0] cm
q
8.80498 0 m
8.80498 4.86292 4.86292 8.80498 0 8.80498 c
-4.86292 8.80498 -8.80498 4.86292 -8.80498 0 c
-8.80498 -4.86292 -4.86292 -8.80498 0 -8.80498 c
4.86292 -8.80498 8.80498 -4.86292 8.80498 0 c
h
S
q
[1 0 0 1 -2.491 -3.317] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -96.086 -6.286] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 96.086 6.286] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000k)
[4.98132
0] Tj
[1 0 0 1 96.086 6.286] cm
Q
[1 0 0 1 2.491 3.317] cm
Q
Q
[1 0 0 1 -88.974 42.52] cm
Q
q
[1 0 0 1 177.948 -42.52] cm
[1 0 0 1 0 0] cm
q
8.83174 0 m
8.83174 4.87769 4.87769 8.83174 0 8.83174 c
-4.87769 8.83174 -8.83174 4.87769 -8.83174 0 c
-8.83174 -4.87769 -4.87769 -8.83174 0 -8.83174 c
4.87769 -8.83174 8.83174 -4.87769 8.83174 0 c
h
S
q
[1 0 0 1 -2.491 -3.372] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -185.06 -6.231] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 185.06 6.231] Tm
0 0 Td
/F7_0 9.96264 Tf
(\0009)
[4.98132
0] Tj
[1 0 0 1 185.06 6.231] cm
Q
[1 0 0 1 2.491 3.372] cm
Q
Q
[1 0 0 1 -177.948 42.52] cm
Q
q
[1 0 0 1 267.02 -42.52] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.49 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -274.133 -6.395] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 274.133 6.395] Tm
0 0 Td
/F7_0 9.96264 Tf
(\0008)
[4.98132
0] Tj
[1 0 0 1 274.133 6.395] cm
Q
[1 0 0 1 2.49 3.208] cm
Q
Q
[1 0 0 1 -267.02 42.52] cm
Q
q
[1 0 0 1 356.093 -42.52] cm
[1 0 0 1 0 0] cm
q
8.90422 0 m
8.90422 4.91771 4.91771 8.90422 0 8.90422 c
-4.91771 8.90422 -8.90422 4.91771 -8.90422 0 c
-8.90422 -4.91771 -4.91771 -8.90422 0 -8.90422 c
4.91771 -8.90422 8.90422 -4.91771 8.90422 0 c
h
S
q
[1 0 0 1 -2.49 -3.208] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -363.206 -6.395] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 363.206 6.395] Tm
0 0 Td
/F7_0 9.96264 Tf
(\000e)
[4.98132
0] Tj
[1 0 0 1 363.206 6.395] cm
Q
[1 0 0 1 2.49 3.208] cm
Q
Q
[1 0 0 1 -356.093 42.52] cm
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font AEXWXS+LMRoman10-Regular
%%EOF
