%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.33.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 219 144
%%HiResBoundingBox: 0 0 218.39 143.529
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font DDHGCW+LMRoman10-Regular
16 dict begin
/FontName /DDHGCW+LMRoman10-Regular_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-430 -290 1417 1127] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
dup 87 /c57 put
dup 88 /c58 put
dup 89 /c59 put
dup 90 /c5a put
dup 91 /c5b put
dup 92 /c5c put
dup 93 /c5d put
dup 94 /c5e put
dup 95 /c5f put
dup 96 /c60 put
dup 97 /c61 put
dup 98 /c62 put
dup 99 /c63 put
dup 100 /c64 put
dup 101 /c65 put
dup 102 /c66 put
dup 103 /c67 put
dup 104 /c68 put
dup 105 /c69 put
dup 106 /c6a put
dup 107 /c6b put
dup 108 /c6c put
dup 109 /c6d put
dup 110 /c6e put
dup 111 /c6f put
dup 112 /c70 put
dup 113 /c71 put
dup 114 /c72 put
dup 115 /c73 put
dup 116 /c74 put
dup 117 /c75 put
dup 118 /c76 put
dup 119 /c77 put
dup 120 /c78 put
dup 121 /c79 put
122 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FA6B0AF338BD4E48F07258C8AB349EE790EF474E6D540CD5017BDA227D234CDE
C5B56059723DE2D25E43567EA970111F9099EFA91396AD179BEECC68CE62455C
2A12EE48EDABA012CC8A5481822B2C11FC74EEBE5D3DA05BE21FC8AE2FEFE4AD
983506712B8ACDE3A061C03B58F71C5891EA5110035AE6784194758ACE2015E6
17BB845C059ABEE6B1082AFBDC2BB42FFCAEEE0B59841E7C9214F9096CA6CBA9
142671BB17558E33C4474A06282677E09E3885A1C003C2A6DD3A6F88E1A52A73
5A1054331B8A1523EEBF4E5016375DD16970A3BD4A08CEFA9C5CE9AF8AB63E5F
4CB0CADD898F710C2496E4ED4A09D54FA74709C83B0824F96BC972F4FD3D6E6F
0154938997BD3BCC0C7675FF515827033C405D61C353DC2E204B80E6D294B4E3
3710F009F10A04C197F1683B18D7E32957D48C8EBCDFCE36CE55283D0BD02F0E
A6B270E717CEB2D21EE80E52DF4CD1658071EFBF069200BDB4E8382DE5CF3260
C0A41D026558CB89F07DA0E45AA08EC5AE28CF53A33D0035C570BDB5B4FBAB41
47F573FB15766523982D1499747ABDDE91094B0256475D06CA84FCC0B55FA24C
C35E75CB40CE1F0BECD39A2101EE815765FF18A80A101D0652153BAA8AC4A6D6
A59D4FC87F9438E4F5071017DAFC0B590371F8EEF930176DAABED5EB53B01D31
BB1116DE24E34A8D72C5EE159C9DBAC234F125ECBE4ED4AC0560EBB1A6CD01EC
12CA29EE31B8D6891656EDBD43049CA2BB9AAEA108C3C823261464481A7DBDA3
5CD9840BFEE3D7E270DFF23D91C931256BF8D58752D3F3DA761027860B9CBC45
820B8F5EB516E347AD3A923DC51D1072B08A397F341430509F985BCB9D76E0EF
2E87D0DB03C3EC754BA6680033EC67DE0CC59C595479EDE164F5E6BDD879DC9F
6F0B1736FA469FC7CDA0D8189045CCCD4E7279A1202439219B2592FC703FC48E
2DF746F9192DBE85060131885A87D08A8E79AC36129C2555BE9A99D74C2010E7
94E81A815CDA77141CA329CEB0D48F0B15E6024FA6C9401180D2D06B70BEBC09
2C638A7BE2C64B74304905568303FA2FD02E8B87A025FB0A9C6B0D0A06B2A28F
28AF724B0B1DA21170AAEA818F8B6CC1767BBB0E001FB79966E36714FC5E24E2
0CE4A863CC9CF96266D7B69F8C8409847618F0074911083185054F37865CC47E
322EDE1D604250C5F53DC2E43EEC3BE207AAA36CD711FC7CEAF591AD9FF4AF9E
B155F9BA0B8F3A71D4CABEFA95244A687712442E764DB2C59503CC972B7F9A89
87BC77F57883DA000772FAE8C4AAD37BE1E1CE5CAF58AAC6B09524D0E19B6880
D59F194CB23CEA56A96134A2D8B03819FFA9C375ED3CEAC78ED1C20383B95AFC
6A9DF23ADC6200017520B402E742BC7E83AAE98D0774017A23FB29AEFC3F22A1
B462D0C02CBD14A1C2A0E19766CA8948463740BF4B8D48DFD5407DF25E76C35F
28D1C5F076279015A0DAB982978D8B31D458F14281928B22AE14C02B9DED22B9
449621916E00828AAF971125F7845D37DBA2845A785F6105F1094AB267F2323D
4A1623BBFB88ECDC7320C65F400C309EAE4490285C66F97D6B75843E8DAB8C80
36BB0BCF36148E5A174EC0C7B697FA90583F22ED13997FB9F456CA440CA23799
83B706A068325A4BB55C350C020F3AB3209DD6391DC416ECF70C24BCEE2F0481
8376A7F9F350A6E83AB35311F90FF5C3BDA6FCA621C681D1C8869B47C7DA7991
CA635E7EF492677100CB6FA6A79B5CE2C994AC97148A6873084C0C13E8203305
7A2F023338667E81ECBB2865668FFCB0B882493CBC04BE5258F4CA5B327C37CD
298025A8F3586B5B73DAFC4E36BD2FA3A5C468CA5FAD51338617CADF6412ADFE
EBC6C5285A624C995CACAF18C1B4C5ED8F5A317CD2296733289C8FF0A51D3EF4
060BA5461C3D97BA775159B2B5A7FA9582E3156290C6B0D7EBF8AC00431A013C
AE3993D5C9D14D67451B04E3EE09A60AD16001EB23FA2B88083EA05003711306
D8F5455945DDBBD67CCDB3D14E7DF2CF6A6FAF3658981B0810890B7BF4E9BD4F
0C822A0AC726E7F8963735F84CFE60F204D8359B85E2D916EA2B6BD7CBA79F27
F44BB99BF230087A32D2A8245C38FD456697227C7F5E9CB67AFBFED91B799A38
32B23B9FC11424BD2B7FABD2AB40723E3563EDD0F41A0E416F10CCFC0BAF4674
0D242B61927CFB765FFFF305BEBD1CA94B7D201423746AEC95C8BEF0DFBC94F2
C9A0905A9A07E880505946FDDD232A0CCF35F07D2448CB1A2D0C79CCBABF1D64
438676376C460AEFF3F14CF1335415CDE2FBCE06D0E4F6540AB520BAC7FC2672
E2570706FB18C5EA191B7C0130475A232A2664E797C89E4EFF9546640787F32B
93D619589F61A1E0D5044FD5C200577DC27269889FB6BBE12AED0818AC837FF3
22B57FC2AB1937ACD00FA7209B8A542D767B05966470A68D5CA4E917891E621B
6736E75C5AA15143CD1273897074FFED2FBC73C29A10739EB494C86697E31772
346A18258E7FAAA1F89042B9965BC98660A3BCE082CE760869B77AC2F7257E11
6FB078BD88242024D5DD6E0378E82E1D3D99696CDB1B6B3B07BDE673100985A0
BEE268A723E0ED805446E5CF9F71098A4781E19ABDC3DB6229EF9FDA58F86937
BF577462667070EB8CD30E8E5AACFFF98FAB5D364D216DEBA2875EBC375233DF
2C1BD9FB3BFCE84B9B2E7BB8C15CEA94200A90AA46D35434DE645465CE3776F1
09D66EC1056E0D33D550402BE01DBF7BFA7F24BF1649163D5CFD46CD7FB28265
397DE650F92B5A1F8387E1B64FF3B1DE8CF76F90FE1C481B5F0D76BFE5123557
FBC59DF9C6ACC0B1F7D8F49C806874495FAC5DF789FFD657D5A79897BC4C0E88
EE2BD1B0A40EDDE3692B3F352A82A0A7BF1D93E47965F60174B8B6AAA9A2393F
5E0EFDC41D445FC688F3469432F96219EE9C0324E1EDE8595485AA891F68E82E
F05D28CD3B42B733E9B5FD1F0C0FCC6B2759E66C3DC11F72D4041BD6B0EE28F0
267EB8E20950460FF531B1E63A042C3EC44F386615FEECC367DD7B9149E6204A
7E719A4ED1FD8099A02670E694711730C076A5F95C4419D44D0CD9B6D337484C
8E68EF97C8E245400551516CEB7EAB369F181F9BCB31B496B676E37F2411616C
97175BC10C94C33746E10A3E5C97D29402E40116BC35FE774401A76422DBA714
749FCB0EF0F29BAE1333D13ABF3D6FC8DC5970F484E5CF3CC6D0E8B21D36FDBC
A0FD19149AC0B30B4238B489188BF68AF7CDCBF6DB4EF5224E773C541E5C2E8B
AD84362C1EF889E637243DC803E7669E4DA61EE82A549B8AA2D3202ED33C3C4D
83BF9B773667978E120FE8B246D5E64B74F53602A82801DCD11F7C614A005874
2DEC8542ECFB04B690466516F52B3F2AB996E3B656296C3B6F4E0FAC1117EF03
45B217CCFBADED45733162F7D9521DD0E4682C5C02566C043EBA49045658B9C5
B8C4262D50741BE2E3BA9E8C8EB4D872FBDF6ECFFA549709E214E70D512889B0
683C4640146981EDEBC5DB8D0692EC99C5A9821053B6C72831DB97A4F9C714BA
0F0BA1C8BDB730D8A73FF6D016944EA2DC881BFB98B8D1AD99B4DAD1A1EDA671
491DBA370F86154821D9B7638A0B5216E59584A573C7CBE85F6214E1D9C8398E
0ED0D9F88E421839954E84411CAC34433C8653F41194B2BF54825F5535615AC5
6A650ABBB7022A087C68A34EBFCFCA2BE2C9AB5544EC20DA1E0A83E9EDDD3100
3259D4121CF01653B22DFC391EBA00D5EC186E0F6CF20B7983A721F85A3016DD
6362EFD7FC9F9A6D178289F43866F8EB3E80FAB5F09E488F5BDE1D56FF3C381B
A5AED7BDAC648A581BAE8AAC898D844230C46C26809DA32485C92C0119CD20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /DDHGCW+LMRoman10-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/DDHGCW+LMRoman10-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F7_0 /DDHGCW+LMRoman10-Regular 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 218.39 143.529 re
W
q
[1 0 0 1 75.717 114.284] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
/DeviceGray {} CS
[0.5] SC
/DeviceGray {} cs
[0.5] sc
0.19925 w
0 -113.38724 m
113.38724 -113.38724 l
0 -85.04042 m
113.38724 -85.04042 l
0 -56.69362 m
113.38724 -56.69362 l
0 -28.3468 m
113.38724 -28.3468 l
0 0 m
113.38724 0 l
0 28.33684 m
113.38724 28.33684 l
0 -113.38724 m
0 28.3468 l
28.3468 -113.38724 m
28.3468 28.3468 l
56.69362 -113.38724 m
56.69362 28.3468 l
85.04042 -113.38724 m
85.04042 28.3468 l
113.37727 -113.38724 m
113.37727 28.3468 l
S
Q
0 0 m
113.38724 0 l
S
q
q
[1 0 0 1 -25.286 -2.625] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -50.431 -111.659] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 50.431 111.659] Tm
0 0 Td
/F7_0 10.49999 Tf
(\000U\000y\000-\000y\000V)
[4.084496
0
5.249995
0
2.918997
0
5.249995
0
4.084496
0] Tj
[1 0 0 1 50.431 111.659] cm
Q
[1 0 0 1 25.286 2.625] cm
Q
Q
q
q
[1 0 0 1 117.085 -2.625] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -192.802 -111.659] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 192.802 111.659] Tm
0 0 Td
/F7_0 10.49999 Tf
(\000U\0009\000-\000y\000V)
[4.084496
0
5.249995
0
2.918997
0
5.249995
0
4.084496
0] Tj
[1 0 0 1 192.802 111.659] cm
Q
[1 0 0 1 -117.085 2.625] cm
Q
Q
q
0.79701 w
85.04042 -28.3468 28.34682 56.6936 re
S
Q
q
q
[1 0 0 1 88.272 -3.585] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -163.989 -110.699] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 163.989 110.699] Tm
0 0 Td
/F7_0 10.49999 Tf
(\000#)
[5.837994
0] Tj
-28 TJm
(\000Q)
[5.249995
0] Tj
28 TJm
(\000t\000R)
[5.543995
0
5.249995
0] Tj
[1 0 0 1 163.989 110.699] cm
Q
[1 0 0 1 -88.272 3.585] cm
Q
Q
q
0.79701 w
0 -113.38724 56.69362 113.38724 re
S
Q
q
q
[1 0 0 1 17.406 -60.278] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -93.123 -54.006] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 93.123 54.006] Tm
0 0 Td
/F7_0 10.49999 Tf
(\000#)
[5.837994
0] Tj
-28 TJm
(\000Q)
[5.249995
0] Tj
28 TJm
(\000t\000k)
[5.543995
0
5.249995
0] Tj
[1 0 0 1 93.123 54.006] cm
Q
[1 0 0 1 -17.406 60.278] cm
Q
Q
2.83484 -56.69362 m
2.83484 -55.12796 1.56564 -53.85876 0 -53.85876 c
-1.56564 -53.85876 -2.83484 -55.12796 -2.83484 -56.69362 c
-2.83484 -58.25926 -1.56564 -59.52846 0 -59.52846 c
1.56564 -59.52846 2.83484 -58.25926 2.83484 -56.69362 c
h
f
2.83484 -56.69362 m
2.83484 -55.12796 1.56564 -53.85876 0 -53.85876 c
-1.56564 -53.85876 -2.83484 -55.12796 -2.83484 -56.69362 c
-2.83484 -58.25926 -1.56564 -59.52846 0 -59.52846 c
1.56564 -59.52846 2.83484 -58.25926 2.83484 -56.69362 c
h
S
87.87527 0 m
87.87527 1.56564 86.60608 2.83484 85.04042 2.83484 c
83.47478 2.83484 82.20557 1.56564 82.20557 0 c
82.20557 -1.56564 83.47478 -2.83484 85.04042 -2.83484 c
86.60608 -2.83484 87.87527 -1.56564 87.87527 0 c
h
f
87.87527 0 m
87.87527 1.56564 86.60608 2.83484 85.04042 2.83484 c
83.47478 2.83484 82.20557 1.56564 82.20557 0 c
82.20557 -1.56564 83.47478 -2.83484 85.04042 -2.83484 c
86.60608 -2.83484 87.87527 -1.56564 87.87527 0 c
h
S
q
q
[1 0 0 1 -71.717 -59.375] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 -4 -54.909] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 4 54.909] Tm
0 0 Td
/F7_0 10.49999 Tf
(\000`\0002\0007\0002\000`\0002\000M\000+\0002)
[4.115996
0
4.661996
0
3.212997
0
4.661996
0
4.115996
0
4.661996
0
5.837994
0
4.661996
0
4.661996
0] Tj
-333 TJm
(\000T)
[5.837994
0] Tj
-28 TJm
(\000Q\000B\000M)
[5.249995
0
2.918997
0
5.837994
0] Tj
28 TJm
(\000i)
[4.084496
0] Tj
[1 0 0 1 4 54.909] cm
Q
[1 0 0 1 71.717 59.375] cm
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font DDHGCW+LMRoman10-Regular
%%EOF
