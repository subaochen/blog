#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ctex-article-with-coderemarks
\begin_preamble
%%%%%%%%%%%%%%%%%%                                                                                                                                                           

%中文断行
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt 

% 标题左对齐
\usepackage[raggedright]{titlesec} 

% 页边距设置
\usepackage[top=1.2in,bottom=1.2in,left=1.2in,right=1in]{geometry}
% 页眉页脚设置
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}                                                  % 清空页眉页脚
\fancyhead[LE,RO]{\thepage}                                 % 偶数页左,奇数页右
\fancyhead[RE]{\leftmark}                                   % 偶数页右
\fancyhead[LO]{\rightmark}                                  % 奇数页左
\fancypagestyle{plain}{
    \fancyhf{}                                                  % 重定义plain页面样式
    \renewcommand{\headrulewidth}{0pt}
}


\usepackage{listings}
\usepackage{color}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\AtBeginDocument{\renewcommand\lstlistingname{代码清单}}

 
\lstset{%
        language=Java,%
        float=hbp,%
        basicstyle=\footnotesize\ttfamily,%
        identifierstyle=\color{colIdentifier},%
        keywordstyle=\color{colKeys},%
        stringstyle=\color{colString},%
        commentstyle=\itshape\color{colComments},%
        columns=fixed,
        tabsize=4,%
        frame=tb,% 顶部和底部加横线
        %frame=shadowbox,
        framerule=1pt,
        framexleftmargin=2em, % 行号包含在代码区域内
        extendedchars=false,%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题                                                                              
        showspaces=false,%
        showstringspaces=false,%
        numbers=left,%
        numberstyle=\tiny\ttfamily,%
        numbersep=1em,%
        breaklines=true,%
        breakindent=10pt,%
        backgroundcolor=\color{hellgelb},%
        breakautoindent=true,%
        captionpos=t,%
        xleftmargin=1em,%
        xrightmargin=\fboxsep,
        escapechar=|
} 

\usepackage{tikz}
\usepackage{ifthen}
\usepackage{coderemarks}
\usepackage{alltt}
%% Style commands
\newcommand{\func}[1]{\texttt{#1}}
\newcommand{\key}[1]{\texttt{#1}}
\newcommand{\type}[1]{\texttt{#1}}
\newcommand{\prog}[1]{\texttt{#1}}
\newcommand{\flag}[1]{\textit{#1}}
\newcommand{\dir}[1]{\texttt{#1}}
\newcommand{\file}[1]{\texttt{#1}}
\newcommand{\var}[1]{\texttt{#1}}
\newcommand{\rem}[1]{\texttt{\textit{#1}}}
\newcommand{\package}[1]{{\textit{#1}}}

% 用于显示终端命令的执行结果
\newenvironment{display}{\def\FrameCommand{\hskip\parindent}%%
\MakeFramed{\advance\hsize-\width\FrameRestore}%%
\vspace*{-2ex}\small\begin{alltt}}%
{\end{alltt}\vspace*{-2ex}\endMakeFramed}

\newenvironment{lbar}[1][]{%
\def\FrameCommand{\rightskip=\parindent\hskip\parindent\vrule width 1pt \hspace{10pt}}%
\MakeFramed{\rightskip=\parindent\advance\hsize-\width\FrameRestore\noindent\hskip-0.6ex}%
{%
\ifthenelse{\equal{#1}{}}{}{\hskip0.6ex\normalfont\myfamily\myheadseries{#1}\\\\}}%
}%
{\endMakeFramed}

% 显示一个向左的箭头
\newcommand{\coderemark}[1]{\sffamily\normalfont\qquad$\leftarrow \textit{\footnotesize #1}$}


%----------------------------------------------------------------------------------------
%	REMARK ENVIRONMENT
%----------------------------------------------------------------------------------------

\newenvironment{remark}{\par\vspace{10pt}\small % Vertical white space above the remark and smaller font size
\begin{list}{}{
\leftmargin=35pt % Indentation on the left
\rightmargin=25pt}\item\ignorespaces % Indentation on the right
\makebox[-2.5pt]{\begin{tikzpicture}[overlay]
\node[draw=ocre!60,line width=1pt,circle,fill=ocre!25,font=\sffamily\bfseries,inner sep=2pt,outer sep=0pt] at (-15pt,0pt){\textcolor{ocre}{R}};\end{tikzpicture}} % Orange R in a circle
\advance\baselineskip -1pt}{\end{list}\vskip5pt} % Tighter line spacing and white space after remark
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
tcolorbox
notice
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman 新宋体
\font_sans 新宋体
\font_typewriter 新宋体
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command bibtex8
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dad3d7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
YDKJS:Up & Going读书笔记
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/yknjs-on-going-cover.jpg
	width 80line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Up & Going
\begin_inset CommandInset label
LatexCommand label
name "fig:Up-&-Going"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You don't know JS系列的写作风格很符合我的口味，挨个找来读读吧，先从最基本的开始。
\end_layout

\begin_layout Section
学习js语法的好办法
\end_layout

\begin_layout Standard
利用chrome的“开发工具”学习js语法是个好办法，尤其是类似这样的布局，简直就是一个所见即所得的学习环境！图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:chrome开发工具帮助学习js"

\end_inset

左边显示的是Up&Going的github当前版本：
\begin_inset CommandInset href
LatexCommand href
name "https://github.com/getify/You-Dont-Know-JS"
target "https://github.com/getify/You-Dont-Know-JS"

\end_inset

，右边就是chrome开发工具的console窗口。
\end_layout

\begin_layout Notice
在console中录入多行代码的方法是利用shift+Enter代替Enter，即一段代码的最后才用Enter结束。Shift+Enter常被称作软回车。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/chrome_devtools_help_learning_js.pdf
	width 90line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
chrome开发工具帮助学习js
\begin_inset CommandInset label
LatexCommand label
name "fig:chrome开发工具帮助学习js"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
另外一个学习JavaScript的好办法是安装nodejs，这样可以直接在终端测试js脚本，无需依赖浏览器了。
\end_layout

\begin_layout Section
几个容易混淆和模糊的概念
\end_layout

\begin_layout Subsection
变量的作用范围
\end_layout

\begin_layout Standard
在函数外使用var定义的变量是全局的（从定义点开始生效）,在函数内部声明局部变量必须使用var（否则成为引用全局变量），在函数外部可以不使用var定义变量，但是
未来的JS可能会不支持，因此要养成用var定义变量的习惯。
\end_layout

\begin_layout Standard
let定义了块级scope，即在{}之间有效的变量scope。
\end_layout

\begin_layout Subsubsection
hoisting
\end_layout

\begin_layout Standard
下面的两段代码自解释了什么是变量和函数的hoisting。
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/subaochen/git/blog/src/js/test_non_hoisting.js"
lstparams "caption={hoisted function only}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/subaochen/git/blog/src/js/test_hoisting.js"
lstparams "caption={hoisted variable and function}"

\end_inset


\end_layout

\begin_layout Subsection
单引号和双引号
\end_layout

\begin_layout Standard
没有任何区别，只是一个使用习惯问题，或者在某些场合下，混用才能过关，比如XHTML页面中。
\end_layout

\begin_layout Subsection
动态类型
\end_layout

\begin_layout Standard
JS的变量类型是动态的，即同一个变量在不同时刻可以存储不同类型的数值。不同于静态类型的编程语言（关心的是变量的类型），JS关心的是
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
数值的类型
\end_layout

\end_inset

，而不是变量的类型。也许，JS的观点更接近编程的自然本质：变量的根本目的是存储数值， 因此
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
数值的类型
\end_layout

\end_inset

是更根本、更值得关注的问题。
\end_layout

\begin_layout Standard
数值的类型是自然获得的。JS的数值共有7种类型
\begin_inset CommandInset citation
LatexCommand cite
key "yknjs-type-grammer"

\end_inset

，每种类型都是literal可以断定的，即通过字面意义即可以决定数值的类型（确定吗？需要举例说明）。
\end_layout

\begin_layout Standard
JS的
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
数值
\end_layout

\end_inset

可以有如下的7种类型：
\end_layout

\begin_layout Itemize
null，but typeof(null) is 
\begin_inset Quotes eld
\end_inset

object
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
undefined
\end_layout

\begin_layout Itemize
boolean
\end_layout

\begin_layout Itemize
number
\end_layout

\begin_layout Itemize
string
\end_layout

\begin_layout Itemize
symbol(in ES6)
\end_layout

\begin_layout Itemize
object
\end_layout

\begin_layout Subsection
常量
\end_layout

\begin_layout Standard
ES6允许使用const定义常量。
\end_layout

\begin_layout Subsection
boolean
\end_layout

\begin_layout Standard
下列数值都是false（完整的列表）,除此之外都是true
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

（空字符串），‘’(空字符)
\end_layout

\begin_layout Itemize
0,-0,NaN(invalid number)
\end_layout

\begin_layout Itemize
null,undefined
\end_layout

\begin_layout Itemize
false
\end_layout

\begin_layout Subsection
函数function
\end_layout

\begin_layout Standard
JS的函数可以嵌套定义，也可以定义的同时立刻执行（Immediately Invoked Funtion Expression，作为命名空间的函数
\begin_inset CommandInset citation
LatexCommand cite
key "javascirpt-definitive-guide"

\end_inset

）。
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/subaochen/git/blog/src/js/iife.js"

\end_inset


\end_layout

\begin_layout Subsection
==和===
\end_layout

\begin_layout Standard
精辟的解释：==在比较时首先做可能的类型转换，而===在比较时不进行类型转换，比如下面的例子：
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

var a = "42";
\end_layout

\begin_layout Plain Layout

var b = 42;
\end_layout

\begin_layout Plain Layout

a == b; // true
\end_layout

\begin_layout Plain Layout

a === b; // false
\end_layout

\end_inset


\end_layout

\begin_layout Standard
在关系表达式两边的表达式的值可能为boolean或者0，-0,
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

,[]时，使用===进行比较，其他情况可以安全的使用==进行比较。
\end_layout

\begin_layout Subsection
闭包
\end_layout

\begin_layout Standard
\start_of_appendix
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/subaochen/git/bibref/references"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
