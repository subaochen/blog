#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ctex-article
\begin_preamble
%%%%%%%%%%%%%%%%%%                                                                                                                                                           

%中文断行
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt 

% 标题左对齐，如果开启，会造成pdf文件的标题没有中文化处理
%\usepackage[raggedright]{titlesec} 

% 页边距设置
\usepackage[top=1.2in,bottom=1.2in,left=1.2in,right=1in]{geometry}
% 页眉页脚设置
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}                                                  % 清空页眉页脚
\fancyhead[LE,RO]{\thepage}                                 % 偶数页左,奇数页右
\fancyhead[RE]{\leftmark}                                   % 偶数页右
\fancyhead[LO]{\rightmark}                                  % 奇数页左
\fancypagestyle{plain}{
    \fancyhf{}                                                  % 重定义plain页面样式
    \renewcommand{\headrulewidth}{0pt}
}


\usepackage{listings}
\usepackage{color}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\AtBeginDocument{\renewcommand\lstlistingname{代码清单}}

 
\lstset{%
        language=Java,%
        float=hbp,%
        basicstyle=\footnotesize\ttfamily,%
        identifierstyle=\color{colIdentifier},%
        keywordstyle=\color{colKeys},%
        stringstyle=\color{colString},%
        commentstyle=\itshape\color{colComments},%
        columns=fixed,
        tabsize=4,%
        frame=tb,% 顶部和底部加横线
        %frame=shadowbox,
        framerule=1pt,
        framexleftmargin=2em, % 行号包含在代码区域内
        extendedchars=false,%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题                                                                              
        showspaces=false,%
        showstringspaces=false,%
        numbers=left,%
        numberstyle=\tiny\ttfamily,%
        numbersep=1em,%
        breaklines=true,%
        breakindent=10pt,%
        backgroundcolor=\color{hellgelb},%
        breakautoindent=true,%
        captionpos=t,%
        xleftmargin=1em,%
        xrightmargin=\fboxsep,
        escapechar=`
} 
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman 新宋体
\font_sans 新宋体
\font_typewriter 新宋体
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
深入了解ThreadLocal
\end_layout

\begin_layout Section
问题的提出
\end_layout

\begin_layout Standard
并发编程（多线程）之所以复杂，一个很重要的原因是多个线程之间需要协作（通讯），即在线程之间共享数据
\begin_inset CommandInset citation
LatexCommand cite
key "java-concurrency-in-practice"

\end_inset

。如果多个线程之间完全没有数据交互，那么多线程编程和单线程编程并没有多大差别。线程之间共享数据又分为两种情况：
\end_layout

\begin_layout Enumerate
共享常量（不变的数据）：只需要保证变量不会被无意修改即可，这可以通过Java语法的final限制。
\end_layout

\begin_layout Enumerate
共享变量：又存在两种情况：
\end_layout

\begin_deeper
\begin_layout Enumerate
多个线程操作同一个变量共同演化：比如，数据库中的序列号，银行的排队机等。
\end_layout

\begin_layout Enumerate
每个线程保持变量的一个副本独立演化：比如？ThreadLocal即为此种情况而设计。
\end_layout

\end_deeper
\begin_layout Section
解决方案1
\end_layout

\begin_layout Section
解决方案2：ThreadLocal
\end_layout

\begin_layout Section
ThreadLocal内部探秘（openjdk源码解析）
\end_layout

\begin_layout Standard
github openjdk fork:
\begin_inset CommandInset href
LatexCommand href
name "https://github.com/dmlloyd/openjdk"
target "https://github.com/dmlloyd/openjdk"

\end_inset


\end_layout

\begin_layout Standard
可以研究ThreadLocal的代码演化过程（从1.5到1.9的进化历史）
\end_layout

\begin_layout Section
ThreadLocal的实际应用：Wildfly
\end_layout

\begin_layout Section
总结
\end_layout

\begin_layout Standard
关于ThreadLocal的使用场景、synchronizied使用场景。
\end_layout

\begin_layout Standard
ThreadLocal的目的是变量隔离而不是共享，变量共享需要同步（sychronized）支持。分别给出例子，比如关于获取序列号。
\end_layout

\begin_layout Standard
threadlocal不能干什么？举例说明。
\end_layout

\begin_layout Standard
\start_of_appendix
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/subaochen/git/blog/blogs/references"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
