#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\input{/home/subaochen/git/writing-common/article-preamble.tex}
\usepackage{layouts}
\end_preamble
\use_default_options true
\begin_modules
theorems-bytype
theorems-chap-bytype
coderemarks
note-inset
tip-inset
warning-inset
logicalmkup
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "DejaVu Serif"
\font_sans "default" "DejaVu Sans"
\font_typewriter "default" "DejaVu Sans Mono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf5
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 3
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #d8daeb
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\SpecialChar LaTeX
的标题样式定制
\end_layout

\begin_layout Standard
章节和标题的样式是\SpecialChar LaTeX
中最富于变化的部分，也是最容易彰显个性的设计，因此\SpecialChar LaTeX
提供了完善的定制接口，允许几乎任意的设计章节和标题的样式。其中内部命令
\backslash
@startsection可以通过定制标题的名称、层次、缩进、间距、字体等方面定制标题，内部命令
\backslash
@secdef则可以几乎任意的设置标题。
\end_layout

\begin_layout Section

\backslash
@startsection
\end_layout

\begin_layout Standard
\SpecialChar LaTeX
把标题作为一个
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
独立的段落
\end_layout

\end_inset

看待，只是标题一般只有一行。
\backslash
@startsection用来定义标题的样式， 包括以下几部分内容：
\end_layout

\begin_layout Description
名称（name） 标题的名称用来在文档中定义标题，比如\SpecialChar LaTeX
常见类中已经预定义的section、subsection等，
\backslash
@startsection可以用来重新定义这些已经预定义的标题，也可以定义新的标题。
\end_layout

\begin_layout Description
层次（level） 标题的层次决定了标题是否显示一个序号（如果小于
\backslash
secnumdepth的话）或者标题在目录中是否展示（如果小于
\backslash
tocdepth的话）。
\end_layout

\begin_layout Description
缩进（indent） 标题的缩进就是段落的缩进，缩进尺寸决定了标题的起始位置，甚至可以设置“负”的缩进使得标题突出正文边界。控制缩进的命令为
\backslash
parindent。
\end_layout

\begin_layout Description
段前间距（beforeskip） 标题作为独立的特殊段落，除了受一般的段落间距
\backslash
parskip影响外，还受
\backslash
beforeskip的影响。
\begin_inset Note Note
status open

\begin_layout Plain Layout
负值的意义?
\end_layout

\end_inset


\end_layout

\begin_layout Description
段后间距（afterskip） 和
\backslash
beforeskip类似，标题的段后间距也受
\backslash
afterskip的影响。
\backslash
beforeskip和
\backslash
afterskip的作用见
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{标题相关参数的意义}
\end_layout

\end_inset

。
\end_layout

\begin_layout Description
样式 标题的对齐方式、字体等。
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}
\end_layout

\begin_layout Plain Layout


\backslash
setlayoutscale{1}
\end_layout

\begin_layout Plain Layout


\backslash
headingdiagram{ }
\end_layout

\begin_layout Plain Layout


\backslash
caption{标题相关参数的意义}
\backslash
label{fig:标题相关参数的意义}
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\backslash
@startsection命令的完整形式为：
\end_layout

\begin_layout LyX-Code

\backslash
@startsection{name}{level}{indent}{beforeskip}{afterskip}{style}
\end_layout

\begin_layout Subsection
article类的section定义
\end_layout

\begin_layout Standard
研究一下\SpecialChar LaTeX
中标准的article类中section的定义
\begin_inset Foot
status open

\begin_layout Plain Layout
参见/usr/share/texlive/texmf-dist/tex/latex/base/article.cls，如果是标准apt安装texlive的话。
\end_layout

\end_inset

，有助于理解
\backslash
@startsection的用法。
\end_layout

\begin_layout LyX-Code
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout LyX-Code

\backslash
newcommand
\backslash
section{
\backslash
@startsection 
\end_layout

\begin_deeper
\begin_layout LyX-Code
{section}%标题的名称为section，因此文档中可以使用
\backslash
section定义此标题
\end_layout

\begin_layout LyX-Code
{1}%一级标题
\end_layout

\begin_layout LyX-Code
{
\backslash
z@}%缩进设置，还不知道具体啥意思
\end_layout

\begin_layout LyX-Code
{-3.5ex 
\backslash
@plus -1ex 
\backslash
@minus -.2ex}%段前间距
\end_layout

\begin_layout LyX-Code
{2.3ex 
\backslash
@plus.2ex}%段后间距
\end_layout

\begin_layout LyX-Code
{
\backslash
normalfont
\backslash
Large
\backslash
bfseries}%字体设置，大号粗体
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
定义新的标题
\end_layout

\begin_layout Standard
作为\SpecialChar LaTeX
的内部命令，
\backslash
@startsection不仅可以用来重新定义常见的标题，比如
\backslash
section，
\backslash
subsection等，当然也可以用来定义新的标题，这在定义新的文档类时特别有用。
\end_layout

\begin_layout Subsection
长标题问题
\end_layout

\begin_layout Standard
标题是一个独立的段落，因此长标题并不是一个“特殊”的问题，当作一个多行段落处理即可。
\begin_inset Note Note
status open

\begin_layout Plain Layout
举例说明
\end_layout

\end_inset


\end_layout

\begin_layout Section

\backslash
secdef
\end_layout

\begin_layout Standard

\backslash
secdef可以方便的定义存在三种形式的命令（这在\SpecialChar LaTeX
中是很常见的情形），即如果这样定义命令：
\end_layout

\begin_layout LyX-Code

\backslash
newcommand
\backslash
cmd
\backslash
{
\backslash
secdef
\backslash
cmda
\backslash
cmdb}
\end_layout

\begin_layout Standard
则实际调用cmd命令的三种情形为：
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
cmd{argument}
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
实际调用：
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
cmda[argument]{argument}
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
cmd[options]{argument}
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
实际调用：
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
cmda[options]{argument}
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
cmd*{argument}
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
实际调用：
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\backslash
cmdb{argument}
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
下面以自定义附录为例，说明
\backslash
secdef的用法。自定义附录的命令为
\backslash
appendix，用法如下：
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

	
\backslash
appendix
\end_layout

\begin_layout Plain Layout

	
\backslash
section{the list of all commands}
\end_layout

\begin_layout Plain Layout

	The follows the text of the first section in the appendix.
 Some more text in the appendix.
 Some more text in the appendix.
\end_layout

\begin_layout Plain Layout

    
\backslash
section
\end_layout

\end_inset


\end_layout

\begin_layout Standard
这看起来和一个普通的段落没有什么两样，看一下
\backslash
appendix、
\backslash
Appendix、
\backslash
sAppendix的定义：
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
makeatletter
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand
\backslash
appendix{
\end_layout

\begin_layout Plain Layout

    
\backslash
renewcommand
\backslash
section{%重定义section
\end_layout

\begin_layout Plain Layout

    	
\backslash
newpage
\backslash
thispagestyle{plain}%新起一页，并设置页面样式为plain，即只在页面底部显示页码
\end_layout

\begin_layout Plain Layout

    	
\backslash
suppressfloats[t]% no top floats
\end_layout

\begin_layout Plain Layout

    	
\backslash
@afterindentfalse% no indent
\end_layout

\begin_layout Plain Layout

    	
\backslash
secdef
\backslash
Appendix
\backslash
sAppendix%执行
\backslash
Appendix or 
\backslash
sAppendix
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
setcounter{section}{0}% 复位section计数器
\end_layout

\begin_layout Plain Layout

    
\backslash
renewcommand
\backslash
thesection{
\backslash
Alph{section}}%
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newcommand
\backslash
Appendix[2][?]{% 附录的复杂形式
\end_layout

\begin_layout Plain Layout

	
\backslash
refstepcounter{section}%step counter/ set label
\end_layout

\begin_layout Plain Layout

	
\backslash
addcontentsline{toc}{appendix}{%创建目录条目
\end_layout

\begin_layout Plain Layout

		
\backslash
protect
\backslash
numberline{
\backslash
appendixname~
\backslash
thesection}#1
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	{
\backslash
raggedleft
\backslash
large
\backslash
bfseries 
\backslash
appendixname
\backslash
 %目录名称和序号
\end_layout

\begin_layout Plain Layout

		
\backslash
thesection
\backslash
par 
\backslash
centering#2
\backslash
par
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
sectionmark{#1}% add to running head
\end_layout

\begin_layout Plain Layout

	
\backslash
@afterheading%prepare indentation handling
\end_layout

\begin_layout Plain Layout

	
\backslash
addvspace{
\backslash
baselineskip}% space after heading
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newcommand
\backslash
sAppendix[1]{%简单的目录样式（star form）
\end_layout

\begin_layout Plain Layout

	{
\backslash
raggedleft
\backslash
large
\backslash
bfseries
\backslash
appendixname
\backslash
par
\backslash
centering#1
\backslash
par}
\end_layout

\begin_layout Plain Layout

	
\backslash
@afterheading
\backslash
addvspace{
\backslash
baselineskip}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
makeatother
\end_layout

\end_inset


\end_layout

\begin_layout Section
相关宏包
\end_layout

\begin_layout Subsection
fncychap
\end_layout

\begin_layout Standard
正如其名，fncychap实现了7种不同的chapter样式—但是不支持中文。
\end_layout

\begin_layout Subsection
quotchap
\end_layout

\begin_layout Standard
可以在每章的开头（或者指定的位置）显示一句“名言警句”，但是不能针对每章定制，灵活性不够好。
\end_layout

\begin_layout Subsection
titlesec
\end_layout

\begin_layout Standard
可以对标题进行非常详细的定制，对中文的支持不够好。
\end_layout

\end_body
\end_document
