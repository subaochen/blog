#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\input{/home/subaochen/git/writing-common/article-preamble.tex}
\usepackage{layout}
\end_preamble
\use_default_options true
\begin_modules
coderemarks
tip-inset
note-inset
warning-inset
theorems-bytype
logicalmkup
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "FreeSerif"
\font_sans "default" "FreeSans"
\font_typewriter "default" "FreeMono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command bibtex8
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 3
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style IEEETranS
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #c3c3c3
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
盒子的操作
\end_layout

\begin_layout Author
宿宝臣<subaochen@126.com>
\end_layout

\begin_layout Standard
《\SpecialChar TeX
 for the impatient》的读书笔记。
\end_layout

\begin_layout Section
赋值和读取盒子
\end_layout

\begin_layout Standard
\SpecialChar TeX
的盒子（box）即可以存储hbox，也可以存储vbox。
\end_layout

\begin_layout Description

\backslash
setbox<register> 设置盒子的内容。
\end_layout

\begin_layout Description

\backslash
box<register> 获取（读取、显示）盒子的内容，阅毕即焚。
\end_layout

\begin_layout Description

\backslash
copy<register> 复制盒子的内容，不清空盒子。
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
体会
\backslash
box阅毕即焚的特点
\end_layout

\begin_layout Example
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40line%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
setbox0=
\backslash
hbox{hello}
\end_layout

\begin_layout Plain Layout


\backslash
setbox1=vbox{
\backslash
copy0
\backslash
box0
\backslash
box0}
\end_layout

\begin_layout Plain Layout


\backslash
box1
\end_layout

\begin_layout Plain Layout


\backslash
box1
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40line%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
hello
\end_layout

\begin_layout Plain Layout
hello
\end_layout

\end_inset


\end_layout

\begin_layout Example
可以看出，在
\backslash
setbox1中，最后一个
\backslash
box0失效了，因为前面一个
\backslash
box0调用已经清空了box0的内容。同样的道理，连续的两个
\backslash
box1调用也只有第一个有效，因此输出的结果只有两个hello。
\end_layout

\begin_layout Section
读取和复制盒子的内容
\end_layout

\begin_layout Description

\backslash
unhbox 读取水平盒子的内容，但不包含盒子本身，阅毕即焚。
\end_layout

\begin_layout Description

\backslash
unvbox
\end_layout

\begin_layout Description

\backslash
unhcopy 只复制盒子的内容，不清空盒子。
\end_layout

\begin_layout Description

\backslash
unvcopy
\end_layout

\begin_layout Example
体会
\backslash
unhbox只读取盒子内容的特点
\begin_inset CommandInset citation
LatexCommand cite
after "p.120"
key "texbook"

\end_inset


\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
setbox3=
\backslash
hbox{A} 
\backslash
setbox3=
\backslash
hbox{
\backslash
box3 B}
\end_layout

\begin_layout Plain Layout


\backslash
setbox4=
\backslash
hbox{A} 
\backslash
setbox4=
\backslash
hbox{
\backslash
unhbox4 B}
\end_layout

\end_inset


\end_layout

\begin_layout Example
box3最终的结果是
\backslash
hbox{
\backslash
hbox{A}B}，而box4最终的结果是
\backslash
hbox{AB}。
\end_layout

\begin_layout Section
移动盒子
\end_layout

\begin_layout Description

\backslash
moveleft 左移垂直盒子
\end_layout

\begin_layout Description

\backslash
moveright 右移垂直盒子
\end_layout

\begin_layout Description

\backslash
raise 升高水平盒子
\end_layout

\begin_layout Description

\backslash
lower 降低水平盒子
\end_layout

\begin_layout Standard

\backslash
TeX的实际定义是：
\end_layout

\begin_layout LyX-Code

\backslash
def
\backslash
TeX{T
\backslash
kern-.1667em 
\backslash
lower.5ex
\backslash
hbox{E}
\backslash
kern-.125em X}
\end_layout

\begin_layout Standard
也就是说，将大写字母E下沉半个字符的高度并适当紧排这三个字母。
\end_layout

\begin_layout Section
获取盒子的尺寸
\end_layout

\begin_layout Description

\backslash
ht height
\end_layout

\begin_layout Description

\backslash
dp depth
\end_layout

\begin_layout Description

\backslash
wd width
\end_layout

\begin_layout Standard
例如，输入如下的代码：
\end_layout

\begin_layout LyX-Code

\backslash
setbox0=
\backslash
vtop{
\backslash
hbox{a}
\backslash
hbox{beige}
\backslash
hbox{bunny}} 
\end_layout

\begin_layout LyX-Code
The box has wdith 
\backslash
the
\backslash
wd0, height 
\backslash
the
\backslash
ht0, and the depth 
\backslash
the
\backslash
dp0.
\backslash
par 
\end_layout

\begin_layout LyX-Code

\backslash
box0 
\end_layout

\begin_layout Standard
其输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setbox0=
\backslash
vtop{
\backslash
hbox{a}
\backslash
hbox{beige}
\backslash
hbox{bunny}} 
\end_layout

\begin_layout Plain Layout

The box has wdith 
\backslash
the
\backslash
wd0, height 
\backslash
the
\backslash
ht0, and the depth 
\backslash
the
\backslash
dp0.
\backslash
par 
\end_layout

\begin_layout Plain Layout


\backslash
box0 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
也就是说，
\backslash
ht0等只是获取box0的高度，并不会清空box0。
\end_layout

\begin_layout Standard
但是，如果
\backslash
box0在
\backslash
ht0之前执行，则
\backslash
ht0将无法获取box0的高度—
\backslash
box0阅毕即焚了。
\end_layout

\begin_layout Section
支架、幻影和空盒子
\end_layout

\begin_layout Subsection
水平支架
\backslash
strut
\begin_inset Note Note
status open

\begin_layout Plain Layout
有没有垂直支架？
\end_layout

\end_inset


\end_layout

\begin_layout Standard
支架是一个宽度为0的水平盒子，其默认高度是8.5pt，深度是3.5pt，即Plain \SpecialChar TeX
中cmr10字体的最大高度和深度。由于支架不占水平位置，因此其常被用来调整水平
盒子的高度和深度：如果盒子中的元素高度和深度不够大，则可以在水平盒子的任意位置插入一个支架，整个盒子的高度和深度就和支架一样大了。
\end_layout

\begin_layout Standard
如果不使用cmr10字体，需要根据字体的尺寸重新定义
\backslash
strut。一个简单的
\backslash
strut可以定义为：
\end_layout

\begin_layout LyX-Code

\backslash
def
\backslash
struct{
\backslash
vrule width0pt height8.5pt depth3.5pt}
\end_layout

\begin_layout Standard
一个关于支架应用的例子：
\end_layout

\begin_layout LyX-Code

\backslash
noindent
\end_layout

\begin_layout LyX-Code

\backslash
offinterlineskip
\end_layout

\begin_layout LyX-Code

\backslash
vtop{
\backslash
hbox{.}
\backslash
hbox{.(}
\backslash
hbox{.x}
\end_layout

\begin_layout LyX-Code
    
\backslash
hbox{.
\backslash
vrule height4pt depth0pt}}
\end_layout

\begin_layout LyX-Code

\backslash
vtop{
\backslash
hbox{.
\backslash
strut}
\backslash
hbox{.(
\backslash
strut}
\backslash
hbox{.x
\backslash
strut}
\end_layout

\begin_layout LyX-Code
    
\backslash
hbox{.
\backslash
vrule height4pt depth0pt
\backslash
strut}}
\end_layout

\begin_layout Standard
其输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\begin_layout Plain Layout


\backslash
offinterlineskip
\end_layout

\begin_layout Plain Layout


\backslash
vtop{
\backslash
hbox{.}
\backslash
hbox{.(}
\backslash
hbox{.x}
\backslash
hbox{.
\backslash
vrule height4pt depth0pt}}
\backslash
hskip 20pt
\end_layout

\begin_layout Plain Layout


\backslash
vtop{
\backslash
hbox{.
\backslash
strut}
\backslash
hbox{.(
\backslash
strut}
\backslash
hbox{.x
\backslash
strut}
\backslash
hbox{.
\backslash
vrule height4pt depth0pt
\backslash
strut}}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
数学支架mathstrut
\end_layout

\begin_layout Standard
创建一个宽度为0,高度和深度和左大括号相同的盒子，用于数学公式的高度对齐，例如：
\end_layout

\begin_layout LyX-Code
$$
\backslash
displaylines{ 
\end_layout

\begin_layout LyX-Code

\backslash
overline{a_1a_2} 
\backslash
land 
\backslash
overline{b_1b_2}
\end_layout

\begin_layout LyX-Code

\backslash
quad{
\backslash
rm versus}
\backslash
quad
\end_layout

\begin_layout LyX-Code

\backslash
overline{a_1a_2
\backslash
mathstrut} 
\backslash
land 
\backslash
overline{b_1b_2
\backslash
mathstrut}
\backslash
cr
\end_layout

\begin_layout LyX-Code

\backslash
sqrt{
\backslash
epsilon} + 
\backslash
sqrt{
\backslash
xi}
\end_layout

\begin_layout LyX-Code

\backslash
quad{
\backslash
rm versus}
\backslash
quad
\end_layout

\begin_layout LyX-Code

\backslash
sqrt{
\backslash
epsilon
\backslash
mathstrut} + 
\backslash
sqrt{
\backslash
xi
\backslash
mathstrut}
\backslash
cr
\end_layout

\begin_layout LyX-Code
}$$
\end_layout

\begin_layout Standard
其输出结果为：
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/latex/tex/mathstrut.png
	width 60line%

\end_inset


\end_layout

\begin_layout Standard
可以看出，使用了mathstrut后的公式漂亮多了！
\end_layout

\begin_layout Subsection
幻影
\backslash
phantom
\end_layout

\begin_layout Standard

\backslash
phantom能够产生一个占位的空盒子，就像占位的字符存在一样，只是你看不到，也就是说，空盒子的宽度、高度和深度和参数字符是相同的。比如：
\end_layout

\begin_layout LyX-Code
$1
\backslash
phantom{911}2$
\end_layout

\begin_layout Standard
其输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$1
\backslash
phantom{911}2$
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
水平幻影
\backslash
hphantom和垂直幻影
\backslash
vphantom
\end_layout

\begin_layout Standard

\backslash
hphantom产生的水平幻影盒子和参数具有相同的宽度，但是高度和深度为0（区别于
\backslash
phantom），
\backslash
vphantom产生的垂直幻影盒子高度、深度和参数相同，但是宽度为0。
\backslash
phantom和
\backslash
hphantom、
\backslash
vphantom的区别在于，
\backslash
phantom产生的幻影是由参数的宽、高、深度完全决定的。比如：
\end_layout

\begin_layout LyX-Code
$$
\end_layout

\begin_deeper
\begin_layout LyX-Code

\backslash
left[
\backslash
vphantom{u
\backslash
over v}t
\backslash
right]%
\backslash
vphantom保证了包围t的中括号的尺寸 
\end_layout

\begin_layout LyX-Code

\backslash
star
\end_layout

\begin_layout LyX-Code

\backslash
left[{u
\backslash
over v}
\backslash
right]
\end_layout

\begin_layout LyX-Code

\backslash
quad
\end_layout

\begin_layout LyX-Code

\backslash
{
\backslash
hphantom{xx}
\backslash
}%
\backslash
hphantom决定了{}中空格的多少
\end_layout

\end_deeper
\begin_layout LyX-Code
$$
\end_layout

\begin_layout Standard
产生的结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$$
\end_layout

\begin_layout Plain Layout

	
\backslash
left[
\backslash
vphantom{u
\backslash
over v}t
\backslash
right] 
\end_layout

\begin_layout Plain Layout

	
\backslash
star
\end_layout

\begin_layout Plain Layout

	
\backslash
left[{u
\backslash
over v}
\backslash
right]
\end_layout

\begin_layout Plain Layout

	
\backslash
quad
\end_layout

\begin_layout Plain Layout

	
\backslash
{
\backslash
hphantom{xx}
\backslash
}
\end_layout

\begin_layout Plain Layout

$$
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\backslash
smash
\end_layout

\begin_layout Standard
smash和hphantom很相似，唯一的区别是smash会打印出参数字符来，但是将包含参数字符的盒子高度和深度设为0。例如：
\end_layout

\begin_layout LyX-Code
$${
\backslash
smash{r_m 
\backslash
brace r_n}
\backslash
vphantom{r}} 
\backslash
Longrightarrow r$$
\end_layout

\begin_layout Standard
输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$${
\backslash
smash{r_m 
\backslash
brace r_n}
\backslash
vphantom{r}} 
\backslash
Longrightarrow r$$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
注意，smash是主动将盒子的高度和深度设置为0，因此不会报告overfill错误。
\end_layout

\begin_layout Subsection
空盒子
\backslash
null
\end_layout

\begin_layout Standard
产生一个高度、深度和宽度为0的盒子。 
\end_layout

\begin_layout Section
盒子异常相关参数
\end_layout

\begin_layout Description

\backslash
overfullrule 上溢时默认显示一个5pt宽度的黑盒子以示警告。
\end_layout

\begin_layout Description

\backslash
hbaddness 水平badness警告阀值。
\end_layout

\begin_layout Description

\backslash
vbadness 垂直badness警告阀值。
\end_layout

\begin_layout Description

\backslash
badness 行或者列排版效果的综合评估。
\end_layout

\begin_layout Description

\backslash
hfuzz 对水平溢出的容忍度，默认0.1pt。即在现有overfull上限的基础上增加一个
\backslash
hfuzz。通过
\backslash
hfuzz可以人为微调对上溢（overfull）的限制，毕竟一般文档的留边比较多，稍微溢出一点不会影响太大—人眼几乎无法辨识0.1pt（35.146微米）的偏差。
\end_layout

\begin_layout Description

\backslash
vfuzz 对垂直溢出的容忍度，默认0.1pt。
\end_layout

\begin_layout Section
从输出列表中获取最后一个项目
\end_layout

\begin_layout Standard
有的时候，我们需要从输出列表中获取最后一个项目：
\end_layout

\begin_layout Description

\backslash
lastkern 最后一个kern
\end_layout

\begin_layout Description

\backslash
lastskip 最后一个skip
\end_layout

\begin_layout Description

\backslash
lastpenalty 最后一个penalty
\end_layout

\begin_layout Description

\backslash
lastbox 最后一个box
\end_layout

\begin_layout Description

\backslash
unkern 删除列表中的最后一个kern
\end_layout

\begin_layout Description

\backslash
unskip 删除列表中的最后一个skip
\end_layout

\begin_layout Description

\backslash
unpenalty 删除列表中的最后一个penalty
\end_layout

\begin_layout Standard
需要注意的是，显然这4个命令不能单独使用，只能作为其他命令的参数。
\backslash
lastbox除了获取输出列表中的最后一个项目外，还从列表中删除这个box，因此
\backslash
lastbox的额外作用是取消这个box的打印输出，比如：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50line%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
def
\backslash
a{two
\backslash
kern 15pt}
\end_layout

\begin_layout Plain Layout

one 
\backslash
a
\backslash
a 
\backslash
hskip 2
\backslash
lastkern three
\backslash
par                      
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
a{
\backslash
hbox{two,four}}
\end_layout

\begin_layout Plain Layout

one 
\backslash
a
\end_layout

\begin_layout Plain Layout


\backslash
setbox0=
\backslash
lastbox
\end_layout

\begin_layout Plain Layout

three 
\backslash
box0
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40line%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
a{two
\backslash
kern 15pt}
\end_layout

\begin_layout Plain Layout

one 
\backslash
a
\backslash
a 
\backslash
hskip 2
\backslash
lastkern three
\backslash
par                      
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
a{
\backslash
hbox{two,four}}
\end_layout

\begin_layout Plain Layout

one 
\backslash
a
\end_layout

\begin_layout Plain Layout


\backslash
setbox0=
\backslash
lastbox
\end_layout

\begin_layout Plain Layout

three 
\backslash
box0
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
标尺
\end_layout

\begin_layout Description

\backslash
hrule 水平标尺
\end_layout

\begin_layout Description

\backslash
vrule 垂直标尺
\end_layout

\begin_layout Standard
通过下例认真体会hrule和baseline的关系：
\end_layout

\begin_layout LyX-Code

\backslash
leftline{
\end_layout

\begin_layout LyX-Code
   
\backslash
vbox{
\backslash
hrule width.6in}
\end_layout

\begin_layout LyX-Code
   
\backslash
vbox{
\backslash
hrule width.6in height5pt depth0pt}
\end_layout

\begin_layout LyX-Code
   
\backslash
vbox{
\backslash
hrule width.6in height0pt depth8pt}
\end_layout

\begin_layout LyX-Code
   
\backslash
vbox{
\backslash
hrule width.6in height5pt depth8pt}
\end_layout

\begin_layout LyX-Code
   
\backslash
vbox{
\backslash
hbox{ baseline}
\backslash
kern 3pt 
\backslash
hrule width.6in}
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
其输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
leftline{
\end_layout

\begin_layout Plain Layout

    
\backslash
vbox{
\backslash
hrule width.6in}
\end_layout

\begin_layout Plain Layout

    
\backslash
vbox{
\backslash
hrule width.6in height5pt depth0pt}
\end_layout

\begin_layout Plain Layout

    
\backslash
vbox{
\backslash
hrule width.6in height0pt depth8pt}
\end_layout

\begin_layout Plain Layout

    
\backslash
vbox{
\backslash
hrule width.6in height5pt depth8pt}
\end_layout

\begin_layout Plain Layout

    
\backslash
vbox{
\backslash
hbox{ baseline}
\backslash
kern 3pt 
\backslash
hrule width.6in}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
另外一个例子，可以看出，\SpecialChar TeX
智能的设置了vrule没有明确声明的参数（深度和高度）。注意到，字母x正好“坐”在baseline上：
\end_layout

\begin_layout LyX-Code

\backslash
hbox{( {
\backslash
vrule} {
\backslash
vrule width8pt} )}
\backslash
vskip 3pt
\end_layout

\begin_layout LyX-Code

\backslash
hbox{( {
\backslash
vrule height13pt depth0pt} {
\backslash
vrule height13pt depth 7pt} x)}
\end_layout

\begin_layout Standard
输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hbox{( {
\backslash
vrule} {
\backslash
vrule width8pt} x)}
\backslash
vskip 3pt
\end_layout

\begin_layout Plain Layout


\backslash
hbox{( {
\backslash
vrule height13pt depth0pt} {
\backslash
vrule height13pt depth 7pt} x)}
\end_layout

\end_inset


\end_layout

\begin_layout Section
前导符
\end_layout

\begin_layout Standard
即在目录中标题和页码之间的符号（一般为句点，也可能是空格或者其他任意模式）。
\end_layout

\begin_layout Description

\backslash
leaders 左端对齐的前导符
\end_layout

\begin_layout Description

\backslash
cleaders 居中显示的前导符
\end_layout

\begin_layout Description

\backslash
xleaders 两端对齐的前导符
\end_layout

\begin_layout Description

\backslash
dotfil 使用位于基线的点填充封闭的水平空间
\end_layout

\begin_layout Description

\backslash
hrulefil 使用位于基线的水平线填充封闭的水平空间
\end_layout

\begin_layout Description

\backslash
leftarrowfill 使用向左的箭头填充封闭的水平空间
\end_layout

\begin_layout Description

\backslash
rightarrowfill 使用向右的箭头填充封闭的水平空间
\end_layout

\begin_layout Standard
示例：
\end_layout

\begin_layout LyX-Code

\backslash
hbox to 3in{
\backslash
vrule 
\backslash
rightarrowfill 
\backslash
 3 in 
\backslash
leftarrowfill
\backslash
vrule}
\end_layout

\begin_layout Standard
结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hbox to 3in{
\backslash
vrule 
\backslash
rightarrowfill 
\backslash
 3 in 
\backslash
leftarrowfill
\backslash
vrule}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
示例：
\end_layout

\begin_layout LyX-Code

\backslash
def
\backslash
bulletfil{
\backslash
vbox to 3ex{
\backslash
vfil
\backslash
hbox{$
\backslash
bullet$}
\backslash
vfil}}
\end_layout

\begin_layout LyX-Code

\backslash
def
\backslash
mybox#1{
\backslash
vbox to 1in{#1}}%也可以写做：
\backslash
def
\backslash
mybox{
\backslash
vbox to 1in}
\end_layout

\begin_layout LyX-Code

\backslash
def
\backslash
myrule{
\backslash
hrule width4pt}
\end_layout

\begin_layout LyX-Code

\backslash
hsize2in
\end_layout

\begin_layout LyX-Code

\backslash
hrule 
\backslash
line{
\end_layout

\begin_layout LyX-Code

\backslash
mybox{
\backslash
myrule depth8pt 
\backslash
leaders
\backslash
bulletfil
\backslash
vfill}
\end_layout

\begin_layout LyX-Code

\backslash
mybox{
\backslash
myrule depth15pt 
\backslash
leaders
\backslash
bulletfil
\backslash
vfill}
\end_layout

\begin_layout LyX-Code

\backslash
mybox{
\backslash
myrule depth18pt 
\backslash
cleaders
\backslash
bulletfil
\backslash
vfill}
\end_layout

\begin_layout LyX-Code

\backslash
mybox{
\backslash
myrule depth12pt 
\backslash
xleaders
\backslash
bulletfil
\backslash
vfill}
\end_layout

\begin_layout LyX-Code
}  
\end_layout

\begin_layout LyX-Code

\backslash
hrule
\end_layout

\begin_layout LyX-Code

\backslash
bye
\end_layout

\begin_layout Standard
其结果为：
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/latex/tex/leaders-demo.png
	width 50line%

\end_inset


\end_layout

\begin_layout Example
\start_of_appendix
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/subaochen/git/bibref/latex"
options "IEEEtranS"

\end_inset


\end_layout

\end_body
\end_document
