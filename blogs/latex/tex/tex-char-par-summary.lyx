#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\input{/home/subaochen/git/writing-common/article-preamble.tex}
\usepackage{smartdiagram}
\end_preamble
\use_default_options true
\begin_modules
coderemarks
tip-inset
note-inset
warning-inset
theorems-bytype
logicalmkup
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "FreeSerif"
\font_sans "default" "FreeSans"
\font_typewriter "default" "FreeMono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf5
\output_sync 0
\bibtex_command bibtex8
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 3
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style IEEETranS
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #c3c3c3
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\SpecialChar TeX
的字符、段落相关命令汇总
\end_layout

\begin_layout Author
宿宝臣<subaochen@126.com>
\end_layout

\begin_layout Standard
本部分将汇总大约130个命令，排序、组织方式和大部分示例出自
\begin_inset CommandInset citation
LatexCommand cite
key "impatient-tex-book"

\end_inset

，算作读书笔记吧，已经熟知的命令仅仅列出，不熟悉的命令解释的详细些。
\end_layout

\begin_layout Section
欧洲特殊字符
\end_layout

\begin_layout Standard
似乎一般我们用不到（都是primitive control sequence，因此在\SpecialChar LaTeX
中也支持）：
\end_layout

\begin_layout Description

\backslash
AA Scandinavian letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AA
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
aa Scandinavian letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
aa
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
AE 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AE{}
\end_layout

\end_inset

 ligature
\end_layout

\begin_layout Description

\backslash
ae 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ae{}
\end_layout

\end_inset

 ligature
\end_layout

\begin_layout Description

\backslash
L Polish letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
L
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
l Polish letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
l
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
O Danish/Norwegian letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
O
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
o Danish/Norwegian letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
o
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
OE 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
OE{}
\end_layout

\end_inset

 ligature
\end_layout

\begin_layout Description

\backslash
oe 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
oe{}
\end_layout

\end_inset

 ligature
\end_layout

\begin_layout Description

\backslash
ss German letter 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ss
\end_layout

\end_inset


\end_layout

\begin_layout Section
特殊字符
\end_layout

\begin_layout Standard
都是primitive control sequence，因此在\SpecialChar LaTeX
中也支持：
\end_layout

\begin_layout Description

\backslash
# pound sign #
\end_layout

\begin_layout Description

\backslash
$ dollar sign $
\end_layout

\begin_layout Description

\backslash
% percent sign %
\end_layout

\begin_layout Description

\backslash
& ampersand &
\end_layout

\begin_layout Description

\backslash
_ underscore
\end_layout

\begin_layout Description

\backslash
lq left quote ‘
\end_layout

\begin_layout Description

\backslash
rq right quote ’
\end_layout

\begin_layout Description

\backslash
lbrack left bracket [
\end_layout

\begin_layout Description

\backslash
rbrack right bracket ]
\end_layout

\begin_layout Description

\backslash
dag dagger symbol 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
dag
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
ddag double dagger symbol 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ddag
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
copyright copyright symbol 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
copyright
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
P paragraph symbol ¶
\end_layout

\begin_layout Description

\backslash
S section symbol §
\end_layout

\begin_layout Description

\backslash
TeX tex logo 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TeX
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
dots 数学环境中的英文省略号
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
dots
\end_layout

\end_inset


\end_layout

\begin_layout Description
$
\backslash
ldots$ 普通文本中的英文省略号 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
ldots$
\end_layout

\end_inset


\end_layout

\begin_layout Section
任意ASCII字符
\end_layout

\begin_layout Description

\backslash
char <charcode>，参见
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://softlab.sdut.edu.cn/blog/subaochen/2017/06/tex%E7%9A%84%E5%AD%97%E7%AC%A6%E8
%BE%93%E5%85%A5/
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
machchar <mathcode>，参见
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
单独阐述
\end_layout

\end_inset


\end_layout

\begin_layout Section
重音符
\end_layout

\begin_layout Standard
似乎我们也很少用到，都是primitive control sequence，因此在\SpecialChar LaTeX
中也支持：
\end_layout

\begin_layout Description

\backslash
’ acute accent as in é
\end_layout

\begin_layout Description

\backslash
.
 dot accent as in ṅ
\end_layout

\begin_layout Description

\backslash
= macron accent as in r̄
\end_layout

\begin_layout Description

\backslash
^ circumflex accent as in ô
\end_layout

\begin_layout Description

\backslash
‘ grave accent as in è
\end_layout

\begin_layout Description

\backslash
" umlaut accent as in ö
\end_layout

\begin_layout Description

\backslash
~ tilde accent as in ã
\end_layout

\begin_layout Description

\backslash
c cedilla accent as in ç
\end_layout

\begin_layout Description

\backslash
d underdot accent as in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
d r
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
H Hungarian umlaut accent as in ő
\end_layout

\begin_layout Description

\backslash
t tie-after accent as in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
t uu
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
u breve accent as in r̆
\end_layout

\begin_layout Description

\backslash
v check accent as in ǒ
\end_layout

\begin_layout Description

\backslash
i 去掉上面点的i：
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
i
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
j 去掉上面点的j：
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
j
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
accent 没搞清楚这个命令的用法，TBD
\end_layout

\begin_layout Section
有关字体
\end_layout

\begin_layout Subsection
plain \SpecialChar TeX
中的字体
\end_layout

\begin_layout Standard
这些命令在plain \SpecialChar TeX
中定义，\SpecialChar LaTeX
中不再支持（字体是一个long story，另文阐述）：
\end_layout

\begin_layout Description

\backslash
fivebf 
\begin_inset ERT
status open

\begin_layout Plain Layout

 {
\backslash
font
\backslash
fivebf=cmbx5 
\backslash
selectfont use 5-point bold face font}
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
fivei use 5-point math italic font
\end_layout

\begin_layout Description

\backslash
fiverm use 5-point roman font
\end_layout

\begin_layout Description

\backslash
fivesy use 5-point math symbol font
\end_layout

\begin_layout Description

\backslash
sevenbf use 7-point bold font
\end_layout

\begin_layout Description

\backslash
seveni use 7-point math italic font
\end_layout

\begin_layout Description

\backslash
sevenrm use 7-point roman font
\end_layout

\begin_layout Description

\backslash
sevensy use 7-point math symbol font
\end_layout

\begin_layout Description

\backslash
tenbf use 10-point bold text font
\end_layout

\begin_layout Description

\backslash
tenex use 10-point math extension font
\end_layout

\begin_layout Description

\backslash
teni use 10-point math italic font
\end_layout

\begin_layout Description

\backslash
tenrm use 10-point roman text font
\end_layout

\begin_layout Description

\backslash
tensl use 10-point slanted roman font
\end_layout

\begin_layout Description

\backslash
tensy use 10-point math symbol font
\end_layout

\begin_layout Description

\backslash
tenit use 10-point italic font
\end_layout

\begin_layout Description

\backslash
tentt use 10-point typewriter font
\end_layout

\begin_layout Subsection
字型
\end_layout

\begin_layout Standard
下面的命令在\SpecialChar LaTeX
中仍然支持，只改变字型，不改变字族、字号：
\end_layout

\begin_layout Description

\backslash
bf 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
bf use boldface type}
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
it 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
it use italic type}
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
rm 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
rm use roman type}
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
sl 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
sl use slanted type}
\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
tt 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
tt use typewriter type}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
大小写转换
\end_layout

\begin_layout Description

\backslash
lowercase { <token list> }，将给定的字符序列转换成小写，但是其中的控制序列不受影响。
\end_layout

\begin_layout Description

\backslash
uppercase { <token list> }，将给定的字符序列转换成大写写，但是其中的控制序列不受影响。
\end_layout

\begin_layout Description

\backslash
lccode <charcode>，取得指定字符的小写形式的ASCII码。
\end_layout

\begin_layout Description

\backslash
uccode <charcode>，取得指定字符的大写形式的ASCII码。
\end_layout

\begin_layout Standard
下列输入：
\end_layout

\begin_layout LyX-Code

\backslash
char
\backslash
uccode`s 
\backslash
char
\backslash
lccode`a 
\backslash
char
\backslash
lccode`M
\end_layout

\begin_layout Standard
的输出是：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
char
\backslash
uccode`s 
\backslash
char
\backslash
lccode`a 
\backslash
char
\backslash
lccode`M
\end_layout

\end_inset


\end_layout

\begin_layout Standard
下列输入：
\end_layout

\begin_layout LyX-Code

\backslash
def
\backslash
x{Cd} 
\backslash
lowercase{Ab
\backslash
x} 
\backslash
uppercase{Ab
\backslash
x}
\end_layout

\begin_layout Standard
的输出是：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
def
\backslash
x{Cd} 
\backslash
lowercase{Ab
\backslash
x} 
\backslash
uppercase{Ab
\backslash
x}
\end_layout

\end_inset


\end_layout

\begin_layout Section
空白（interword spacing）
\end_layout

\begin_layout Standard
空白不单纯是指空格，这里特指单词之间的空白。看起来似乎很简单的空白，在排版中却隐藏了诸多学问，\SpecialChar TeX
有如下的方式表达空白，各有不同的适用场合。
\end_layout

\begin_layout Subsection
空格
\end_layout

\begin_layout Standard
正常输入英文时，通常以空格区分单词。空格的大小不是固定的，\SpecialChar TeX
在断行时可能调整（伸长或者压缩）空格的长度。
\end_layout

\begin_layout Subsection
空格控制符
\backslash

\begin_inset space \textvisiblespace{}
\end_inset


\end_layout

\begin_layout Standard
空格控制符所制造的空格长度是不可变的。
\end_layout

\begin_layout Subsection
空格控制字
\backslash
space
\end_layout

\begin_layout Standard
空格控制字所制造的空格会受前面标点符号的影响而长度略有变化，比如：
\end_layout

\begin_layout LyX-Code
Here is
\backslash
space Yes.
\backslash
space No.
\backslash
space.
 Maybe.
\backslash
par
\end_layout

\begin_layout LyX-Code
Here is
\backslash
 Yes.
\backslash
 No.
\backslash
 Maybe.
\backslash
par
\end_layout

\begin_layout LyX-Code
Here is Yes.
 No.
 Maybe.
\end_layout

\begin_layout Standard
结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

Here is
\backslash
space Yes.
\backslash
space No.
\backslash
space Maybe.
\backslash
par
\end_layout

\begin_layout Plain Layout

Here is
\backslash
 Yes.
\backslash
 No.
\backslash
 Maybe.
\backslash
par
\end_layout

\begin_layout Plain Layout

Here is Yes.
 No.
 Maybe.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
^^M
\end_layout

\begin_layout Standard
'^^'是\SpecialChar TeX
的特殊标记，用于获取ASCII表中的控制字符（0–31部分）。控制字符无法直接输入，因此设计了
\begin_inset Quotes erd
\end_inset

^^c
\begin_inset Quotes erd
\end_inset

来表示某个控制字符，其中c的ASCII码比所需要的控制字符的ASCII码大64
\begin_inset CommandInset citation
LatexCommand cite
after "p.368"
key "texbook"

\end_inset

。M的ASCII码是77，因此^^M表示ASCII码值是13的控制字符，即回车（return）。同样的道理，^^I表示制表符（tab），^^J表示换行符(lin
e feed），*也可以使用^^j输入。因此，
\begin_inset Flex Code
status open

\begin_layout Plain Layout

\backslash
number `
\backslash
^^M
\end_layout

\end_inset

的输出应该是13。
\end_layout

\begin_layout Standard
\SpecialChar TeX
表示任意ASCII码的方式还有^^xy，其中xy分别是ASCII表中行和列的16进制形式（只限小写），因此^^M也可以表示为：^^0d（
\begin_inset CommandInset citation
LatexCommand cite
after "p.368"
key "texbook"

\end_inset

提供的ASCII表非常方便查阅。）
\end_layout

\begin_layout Standard
言归正传，^^M在\SpecialChar TeX
中的意义为：
\end_layout

\begin_layout Itemize
如果^^M出现在行的中间，则代表一个空格，并忽略此行后面的内容。
\end_layout

\begin_layout Itemize
如果^^M出现在行的末尾，则代表一个
\backslash
par，即段落的结束。
\end_layout

\begin_layout Standard
认真分析下面的输入：
\end_layout

\begin_layout LyX-Code
Hello.^^MGoodbye.
\end_layout

\begin_layout LyX-Code
Goodbye again.
\backslash
par
\end_layout

\begin_layout LyX-Code
The 
\backslash
char `
\backslash
^^M
\backslash
 character.
\backslash
par
\end_layout

\begin_layout LyX-Code
% The fl ligature is at position 13 of font cmr10
\end_layout

\begin_layout LyX-Code

\backslash
number `
\backslash
^^M
\backslash
 is the end of line code.
\backslash
par
\end_layout

\begin_layout LyX-Code
Again, 
\backslash
number `^^M is the end of line code,
\end_layout

\begin_layout LyX-Code
isn’t it? % 32 is the ASCII code for a space
\end_layout

\begin_layout Standard
其输出是：
\end_layout

\begin_layout Standard
Hello.
 Goodbye again.
\end_layout

\begin_layout Standard
The fl character.
\end_layout

\begin_layout Standard
13 is the end of line code.
\end_layout

\begin_layout Standard
Again, 32isn’t it?
\end_layout

\begin_layout Standard
注意几种表达形式的区别：
\end_layout

\begin_layout Description
^^M ^^M如果出现在行中则\SpecialChar TeX
解释为一个空格
\end_layout

\begin_layout Description
`
\backslash
^^M 表示ASCII码为13的字符的ASCII码，即13
\end_layout

\begin_layout Description
`^^M ^^M如果出现在行中则解释为一个空格，因此`^^M表示取空格的ASCII码，即32
\end_layout

\begin_layout Subsection
~
\end_layout

\begin_layout Standard
表示一个不可断行的空格
\begin_inset Note Note
status open

\begin_layout Plain Layout
可以伸长和压缩吗？
\end_layout

\end_inset

。
\end_layout

\begin_layout Subsection

\backslash
/
\end_layout

\begin_layout Standard
斜体修正，即在斜体字和直体字之间插入一个这样的间隙，防止斜体字的尖角插入直体字中。也用于修正标点符号靠的太近等问题。大约为空格的1/5
\begin_inset Note Note
status open

\begin_layout Plain Layout
需要具体的说法，到底多宽的空格?
\end_layout

\end_inset

？比如：
\end_layout

\begin_layout LyX-Code
However, {
\backslash
it someone} ate {
\backslash
it something}: that's clear.
\backslash
par
\end_layout

\begin_layout LyX-Code
However, {
\backslash
it someone
\backslash
/} ate {
\backslash
it something
\backslash
/}: that's clear.
\end_layout

\begin_layout Standard
结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

However, {
\backslash
it someone} ate {
\backslash
it something}: that's clear.
\backslash
par
\end_layout

\begin_layout Plain Layout

However, {
\backslash
it someone
\backslash
/} ate {
\backslash
it something
\backslash
/}: that's clear.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\backslash
frenchspacing 
\backslash
nonfrenchspacing
\end_layout

\begin_layout Standard

\backslash
frenchspacing会压缩句末的标点和下一个单词的间距，使得显示更优雅（难道这就是frenchspacing的由来？），比如：
\end_layout

\begin_layout Standard
{
\backslash
frenchspacing An example: two sentences.
 Right? No.
\backslash
par}
\end_layout

\begin_layout Standard
{An example: two sentences.
 Right? No.
 
\backslash
par}%
\end_layout

\begin_layout Standard
的结果是：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
frenchspacing An example: two sentences.
 Right? No.
\backslash
par}
\end_layout

\begin_layout Plain Layout

{An example: two sentences.
 Right? No.
 
\backslash
par}%
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\backslash
obeyspaces
\end_layout

\begin_layout Standard
通常，\SpecialChar TeX
会吃掉连续的空格，
\backslash
obeyspaces则告诉\SpecialChar TeX
保留所有的空格，比如：
\end_layout

\begin_layout LyX-Code
These
\begin_inset space \qquad{}
\end_inset

 spaces
\begin_inset space \qquad{}
\end_inset

 are
\begin_inset space \qquad{}
\end_inset

 closed
\begin_inset space \qquad{}
\end_inset

 up 
\end_layout

\begin_layout LyX-Code
{
\backslash
obeyspaces but
\begin_inset space \qquad{}
\end_inset

 these are
\begin_inset space \qquad{}
\end_inset

 not }.
 
\end_layout

\begin_layout Standard
输出结果为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

These    spaces    are    closed    up
\end_layout

\begin_layout Plain Layout

{
\backslash
obeyspaces but    these are    not}.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
空白影响因子
\end_layout

\begin_layout Standard
\SpecialChar TeX
定义了如下的变量影响词间距：
\end_layout

\begin_layout Description

\backslash
spacefactor 空格的伸缩因子，默认值为1000。如果
\backslash
spacefactor（记做
\begin_inset ERT
status open

\begin_layout Plain Layout

$f$
\end_layout

\end_inset

）不等于1000，则空格的伸长倍数为
\begin_inset ERT
status open

\begin_layout Plain Layout

$f/1000$
\end_layout

\end_inset

，压缩倍数为
\begin_inset ERT
status open

\begin_layout Plain Layout

$1000/f$
\end_layout

\end_inset

。即，
\backslash
spacefactor > 1000时，空格被拉长，
\backslash
spacefactor < 1000时，空格被压缩。
\end_layout

\begin_layout Description

\backslash
spaceskip 当
\backslash
spacefactor < 2000时的伸缩glue。
\backslash
spaceskip是一种叠加效果，当
\backslash
spaceskip为0时，空格按照
\backslash
spacefactor伸缩。
\end_layout

\begin_layout Description

\backslash
xspaceskip 当
\backslash
spacefactor > 2000时，
\backslash
xspaceskip声明的glue生效，即当
\backslash
spacefactor > 2000时，允许额外的伸缩效果。
\backslash
xspaceskip是一种叠加效果。
\end_layout

\begin_layout Description

\backslash
sfcode space factor code，通常记做
\begin_inset ERT
status open

\begin_layout Plain Layout

$f_c$
\end_layout

\end_inset

。每一个字符都有一个对应的
\backslash
sfcode，
\backslash
sfcode对
\backslash
spacefactor的影响方式如下：
\end_layout

\begin_deeper
\begin_layout Itemize
如果
\begin_inset ERT
status open

\begin_layout Plain Layout

$f_c$
\end_layout

\end_inset

为0，则保持
\backslash
spacefactor不变。
\end_layout

\begin_layout Itemize
如果
\begin_inset ERT
status open

\begin_layout Plain Layout

$f<1000<f_c$
\end_layout

\end_inset

，则设置
\begin_inset ERT
status open

\begin_layout Plain Layout

$f$
\end_layout

\end_inset

为1000而不是
\begin_inset ERT
status open

\begin_layout Plain Layout

$f_c$
\end_layout

\end_inset

，防止
\begin_inset ERT
status open

\begin_layout Plain Layout

$f$
\end_layout

\end_inset

变化过快。
\end_layout

\end_deeper
\begin_layout Section
行对齐
\end_layout

\begin_layout Subsection

\backslash
centerline、
\backslash
leftline、
\backslash
rightline
\end_layout

\begin_layout Standard
意义一目了然，都是创建一个合适大小的hbox并居中或者居左、居右显示。但是要注意这三个命令不能用与段落，只能用于不超过一行的文本。
\end_layout

\begin_layout Subsection

\backslash
line
\begin_inset Note Note
status open

\begin_layout Plain Layout
似乎XeLaTeX不支持？难道不是primitive command?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
区别于
\backslash
centerline，
\backslash
line创建一个宽度为行宽的hbox，即充满一行的hbox，因此需要在必要的位置插入
\backslash
hfil，否则容易造成hbox的underflow告警。
\end_layout

\begin_layout Subsection

\backslash
llap、
\backslash
rlap
\end_layout

\begin_layout Standard

\backslash
llap和
\backslash
rlap能够制造某种程度的重叠效果。
\backslash
llap根据参数字符串的长度首先回退光标，然后输出参数字符串；
\backslash
rlap首先输出参数字符串，然后回退光标到输出前的位置。比如不等于符号可以这样“画”出来：
\begin_inset Flex Code
status open

\begin_layout Plain Layout

\backslash
rlap=$/$
\end_layout

\end_inset

，即：
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rlap=$/$
\end_layout

\end_inset

。下面的例子演示了
\backslash
llap和
\backslash
rlap接受多个字符作为参数时的效果：
\end_layout

\begin_layout LyX-Code

\backslash
hrule
\end_layout

\begin_layout LyX-Code

\backslash
noindent
\backslash
llap{off left}
\backslash
centerline{
\backslash
vrule$
\backslash
Leftarrow$ left margin of examples
\backslash
hfill
\end_layout

\begin_layout LyX-Code
right margin of examples$
\backslash
Rightarrow$
\backslash
vrule}
\backslash
rlap{off right}
\end_layout

\begin_layout Standard
输出为：
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hrule
\end_layout

\begin_layout Plain Layout


\backslash
noindent
\backslash
llap{off left}
\backslash
centerline{
\backslash
vrule$
\backslash
Leftarrow$ left margin of examples
\backslash
hfill
\end_layout

\begin_layout Plain Layout

right margin of examples$
\backslash
Rightarrow$
\backslash
vrule}
\backslash
rlap{off right}
\end_layout

\end_inset


\end_layout

\begin_layout Section
段落处理
\end_layout

\begin_layout Subsection
开始、结束和缩进段落
\end_layout

\begin_layout Description

\backslash
par 结束一个段落，但是并不意味着开始一个新的段落。
\end_layout

\begin_layout Description

\backslash
endgraf 
\backslash
par的同义词
\end_layout

\begin_layout Description

\backslash
parfillskip 决定了在段落末尾的填充模式，默认是0pt plus 1fil，即以空格填满剩余的横向空间。
\end_layout

\begin_layout Description

\backslash
indent 以
\backslash
parindent设定的值缩进当前段落。
\end_layout

\begin_layout Description

\backslash
noindent 不缩进当前段落。
\end_layout

\begin_layout Description

\backslash
textindent 除了和
\backslash
indent一行的效果外，还叠加了右对齐和间隔en dash， plain \SpecialChar TeX
用于footnote和
\backslash
item的展示。\SpecialChar LaTeX
似乎不再支持这个宏。
\end_layout

\begin_layout Description

\backslash
parskip 弹性段间距
\end_layout

\begin_layout Description

\backslash
parindent 段落缩进
\end_layout

\begin_layout Description

\backslash
everypar 每一段落都要首先执行的命令，默认为空
\end_layout

\begin_layout Subsection
段落对齐
\end_layout

\begin_layout Description

\backslash
hsize 设置全局或者当前分组的水平宽度
\end_layout

\begin_layout Description

\backslash
narrower 左右两端同时缩进
\backslash
parindent
\end_layout

\begin_layout Description

\backslash
leftskip 段落整体左缩进弹性尺寸
\end_layout

\begin_layout Description

\backslash
rightskip 段落整体右缩进弹性尺寸
\end_layout

\begin_layout Description

\backslash
raggedright 右端不对齐
\end_layout

\begin_layout Description

\backslash
raggedleft 左端不对齐
\end_layout

\begin_layout Description

\backslash
hang 从第二行开始将段落缩进
\backslash
parindent。因为默认第一行已经缩进了
\backslash
parindent，看起来整个段落都缩进了
\backslash
parindent。
\end_layout

\begin_layout Description

\backslash
hangafter [<number> parameter]如果n < 0，则开始的-n行会被缩进；如果n > 0，则从第n行开始缩进。
\end_layout

\begin_layout Description

\backslash
hangindent [<dimen> parameter]如果x >= 0，则段落左缩进x；如果x < 0，则段落右缩进x。
\end_layout

\begin_layout Description

\backslash
prevgraf 段落包含的行数，一般由\SpecialChar TeX
设置。在行模式下，指当前段落包含的行数；在列模式下，指上一个段落包含的行数。
\end_layout

\begin_layout Description

\backslash
vadjust 在当前行和下一行之间插入指定的内容，比如：
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Some of these words are 
\backslash
vadjust{
\backslash
kern8pt
\backslash
hrule} to befound above the line and others are to be found below it.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

输出为：
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

Some of these words are 
\backslash
vadjust{
\backslash
kern8pt
\backslash
hrule} to be
\end_layout

\begin_layout Plain Layout

found above the line, because we use vadjust to insert something between
 this line and next line; and others are to be found below it.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Description

\backslash
parshape 参见
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://softlab.sdut.edu.cn/blog/subaochen/2017/06/%E5%B7%A7%E7%94%A8parshape%E5%AE%
9E%E7%8E%B0%E7%89%B9%E6%AE%8A%E5%BD%A2%E7%8A%B6%E7%9A%84%E6%8E%92%E7%89%88/
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
欣赏一下输出结果：
\end_layout

\begin_layout Section
断行
\end_layout

\begin_layout Standard
此部分有些内容相当琐碎，比如\SpecialChar TeX
断行时badness、demerits的计算方法，需要对照
\begin_inset CommandInset citation
LatexCommand cite
key "texbook"

\end_inset

进一步消化。
\end_layout

\begin_layout Description

\backslash
break 强制断行
\end_layout

\begin_layout Description

\backslash
nobreak 不允许断行
\end_layout

\begin_layout Description

\backslash
allowbreak 允许断行
\end_layout

\begin_layout Description

\backslash
penalty 实际上，
\backslash
break的定义是:
\backslash
def
\backslash
break{
\backslash
penalty -10000}，
\backslash
nobreak的定义
\backslash
def
\backslash
nobreak{
\backslash
penalty 10000}，
\backslash
allowbreak的定义是
\backslash
def
\backslash
allowbreak{
\backslash
penalty 0}
\end_layout

\begin_layout Description

\backslash
obeylines 输入的每个换行（正常情况下被当作空格）都被当作
\backslash
break，适合输出代码、诗歌等。
\end_layout

\begin_layout Description

\backslash
slash 产生一个
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
slash
\end_layout

\end_inset

，并且允许\SpecialChar TeX
在此处断行。
\end_layout

\begin_layout Description

\backslash
pretolerance 没有hyphenation时的tolerance，默认值100
\end_layout

\begin_layout Description

\backslash
tolerance 存在hyphenation时的tolerance，默认值200
\end_layout

\begin_layout Description

\backslash
emergencystretch 正如其名，在构造水平盒子过程中这是最后的“招数”，如果emergencystretch不为0，\SpecialChar TeX
试图将emergencystre
tch加到每一行的stretch上面，即稍微拉长词间距看看能否满足要求。可见，emergencystretch只能够尝试解决underfull的盒子，对于ove
rfull的盒子没有补救作用。但是，设置emergencystretch比增大tolerance要好一些。
\end_layout

\begin_layout Description

\backslash
looseness 默认值是0，如果非0则\SpecialChar TeX
尝试将一段落重新断行以使得行数增加或者减少给定的值，如果因此badness超出了tolerance，则将给定值自增或者
自减1重新尝试，以此类推。
\end_layout

\begin_layout Description

\backslash
linepenalty 可以在每行的badness上面叠加的一个评估因子，即\SpecialChar TeX
不仅仅依靠badness评估断行的效果，还要依赖penalty、linepenalt
y的设置共同获得一个demerits（计为
\begin_inset ERT
status open

\begin_layout Plain Layout

$d$
\end_layout

\end_inset

），具体参见
\begin_inset CommandInset citation
LatexCommand cite
after "p.98"
key "texbook"

\end_inset

。\SpecialChar TeX
依赖
\begin_inset ERT
status open

\begin_layout Plain Layout

$d$
\end_layout

\end_inset

决定不同断行策略的优劣。
\end_layout

\begin_layout Description

\backslash
adjdemerits 评估相邻行的差异度，比如当前行是适度的，但是下一行非常松散则adjdemerits会被增加到当前行的demerits中，即当前行的评估值
会变坏。
\backslash
tracingparagraphs=1会在日志文件中显示\SpecialChar TeX
计算badness、demerits等的过程。
\end_layout

\begin_layout Description

\backslash
exhyphenpenalty 用于显式(explicit hyphen)声明的连字符penalty，即当连字符是明确显式声明时，exhyphenpenalty
决定了\SpecialChar TeX
在这个显式声明的连字符处断行的“态度”：越大的数字告诉\SpecialChar TeX
不要在这里断行。plain \SpecialChar TeX
的默认值是50。
\end_layout

\begin_layout Description

\backslash
hyphenpenalty 用于隐式连字符，原理同
\backslash
exhyphenpenalty。
\end_layout

\begin_layout Description

\backslash
doublehyphendemerits adjdemerits评估相邻两行的差异度，doublehyphendemerits则评估当前行和相邻的下两行的差异度
（使用连字符的断行），并增加到当前行的demerits中。
\end_layout

\begin_layout Description

\backslash
finalhyphendemerits 评估当前行到段落的最后一行的差异度（使用连字符的断行），并增加到当前行的demerits中。
\end_layout

\begin_layout Description

\backslash
binoppenalty 设置数学公式中在binary operator之后断行的penalty。
\end_layout

\begin_layout Description

\backslash
relpenalty 设置数学公式中在relation之后断行的penalty。
\end_layout

\begin_layout Description

\backslash
badness 每一行都计算获得一个badness，表征本行词间距的大小。
\end_layout

\begin_layout Description

\backslash
hbadness 当
\backslash
badness超出了
\backslash
hbadness设定的阀值时(默认值1000)，\SpecialChar TeX
将报告overfull或者underfull错误。
\backslash
hbadness只影响终端或者日志中输出错误的多少，并不影响版面布局。
\end_layout

\begin_layout Description

\backslash
hfuzz 告诉\SpecialChar TeX
，超出hbox自然宽度多少才算是overfull？默认是0.1pt。通过修改
\backslash
hfuzz，可以提高排版的“容忍”程度，但是可能导致“更坏”的效果，要谨慎。
\end_layout

\begin_layout Description

\backslash
overfullrule plain \SpecialChar TeX
在overfull时显示的一个警告块，默认5pt宽。
\end_layout

\begin_layout Subsection
断行过程
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand include
filename "/home/subaochen/git/blog/imgs/latex/tex/tex-hyphen-flow.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\SpecialChar TeX
的断行过程
\begin_inset CommandInset label
LatexCommand label
name "fig:TeX的断行过程"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\backslash
badness、
\backslash
hbadness、
\backslash
tolerance的关系
\end_layout

\begin_layout Standard
\SpecialChar TeX
每行都会构造一个水平盒子，一个水平盒子的状态为以下五种之一：underfull、loose、normal、tight、overfull。在构造水平盒子过程中，\SpecialChar TeX
会
尝试不同的断行方法，不同的断行方法获得不同的badness值。当断行不会导致任何的间距伸缩调整时，水平盒子的状态为normal，此时badness的值为0；当断
行导致词间距被压缩，此时水平盒子的状态为tight，当压缩到最大仍然不能满足时，水平盒子的状态为overfull。loose和underfull的分析以此类推。
无论压缩词间距还是伸长词间距都会增大badness的值。当badness的值大于tolerance设定的阀值时，\SpecialChar TeX
虽然能够放置这个水平盒子，但是会导致无法对齐的排
版，因此对于overfull，\SpecialChar TeX
会在行尾显示一个
\backslash
overfullrule（黑色块）提醒这一行发生了overfull。
\end_layout

\begin_layout Standard
plain \SpecialChar TeX
中
\backslash
tolerance的默认值是200，
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
提高
\backslash
tolerance的设置可能导致难看的排版效果
\end_layout

\end_inset

。
\end_layout

\begin_layout Standard

\backslash
hbadness仅仅是一个报警的阀值，即当
\backslash
badness超过hbadness的阀值时，\SpecialChar TeX
会在终端或者Log文件中给出警告信息。
\begin_inset Flex Strong
status open

\begin_layout Plain Layout

\backslash
hbadness并不会实际影响排版的效果
\end_layout

\end_inset

。
\end_layout

\begin_layout Subsection

\backslash
hfuzz
\end_layout

\begin_layout Standard
下面的示例很好的演示了
\backslash
hfuzz的效果，由于hfuzz放宽了溢出的限制，这个盒子不会overfull。
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45line%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout


\backslash
hfuzz = .5in
\end_layout

\begin_layout Plain Layout


\backslash
hbox to 2in{This box is some longer than two inches.}
\end_layout

\begin_layout Plain Layout

% No error results
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50line%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hfuzz = .5in
\end_layout

\begin_layout Plain Layout


\backslash
hbox to 2in{This box is some longer than two inches.}
\end_layout

\begin_layout Plain Layout

% No error results
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

    
\backslash
draw(0,0)--(3in,0);
\end_layout

\begin_layout Plain Layout

    
\backslash
foreach 
\backslash
x in {0,1,2,3}{
\end_layout

\begin_layout Plain Layout

        
\backslash
draw[semithick] (
\backslash
x in,0) -- (
\backslash
x in,-.3);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
node[right,scale=0.8] at (3in,-.15){3in};
\end_layout

\begin_layout Plain Layout

    
\backslash
foreach 
\backslash
x in {0.1,0.2,...,2.9}{
\end_layout

\begin_layout Plain Layout

        
\backslash
draw (
\backslash
x in,0) -- (
\backslash
x in,-0.1);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
foreach 
\backslash
x in {0.5,1,...,2.5}{
\end_layout

\begin_layout Plain Layout

        
\backslash
draw (
\backslash
x in,0) -- (
\backslash
x in,-.17);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
连字符
\end_layout

\begin_layout Description

\backslash
- 在任意位置给单词增加连字符，告诉\SpecialChar TeX
可以从这里断行。
\end_layout

\begin_layout Description

\backslash
discretionary {<pre-break text>}{<post-break text>}{<no-break text>}，
\backslash
-相当于
\backslash
discretionary{-}{}{}。
\end_layout

\begin_layout Description

\backslash
hyphenation 提供一个使用连字符的单词列表
\end_layout

\begin_layout Description

\backslash
uchyph 为正数则允许大写字母开头的单词使用连字符，plain \SpecialChar TeX
默认值为1
\end_layout

\begin_layout Description

\backslash
showhyphens 在终端和日志显示给定的单词的连字符形式
\end_layout

\begin_layout Description

\backslash
language
\end_layout

\begin_layout Description

\backslash
setlanguage
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/subaochen/git/bibref/latex"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
