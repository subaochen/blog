#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ctex-article-coderemarks
\begin_preamble
%%%%%%%%%%%%%%%%%%                                                                                                                                                           

%中文断行
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt 

% 标题左对齐
\usepackage[raggedright]{titlesec} 

% 页边距设置
\usepackage[top=1.2in,bottom=1.2in,left=1.2in,right=1in]{geometry}
% 页眉页脚设置
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}                                                  % 清空页眉页脚
\fancyhead[LE,RO]{\thepage}                                 % 偶数页左,奇数页右
\fancyhead[RE]{\leftmark}                                   % 偶数页右
\fancyhead[LO]{\rightmark}                                  % 奇数页左
\fancypagestyle{plain}{
    \fancyhf{}                                                  % 重定义plain页面样式
    \renewcommand{\headrulewidth}{0pt}
}


\usepackage{listings}
\usepackage{color}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\AtBeginDocument{\renewcommand\lstlistingname{代码清单}}

 
\lstset{%
        language=Java,%
        float=hbp,%
        basicstyle=\footnotesize\ttfamily,%
        identifierstyle=\color{colIdentifier},%
        keywordstyle=\color{colKeys},%
        stringstyle=\color{colString},%
        commentstyle=\itshape\color{colComments},%
        columns=fixed,
        tabsize=4,%
        frame=tb,% 顶部和底部加横线
        %frame=shadowbox,
        framerule=1pt,
        framexleftmargin=2em, % 行号包含在代码区域内
        extendedchars=false,%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题                                                                              
        showspaces=false,%
        showstringspaces=false,%
        numbers=left,%
        numberstyle=\tiny\ttfamily,%
        numbersep=1em,%
        breaklines=true,%
        breakindent=10pt,%
        backgroundcolor=\color{hellgelb},%
        breakautoindent=true,%
        captionpos=t,%
        xleftmargin=1em,%
        xrightmargin=\fboxsep,
        escapechar=|
} 


\usepackage{tikz}
\usepackage{ifthen}
\usepackage{coderemarks}
\usepackage{alltt}
% Optional PGF libraries
\usepackage{pgflibraryarrows}
\usepackage{pgflibrarysnakes}

%% Style commands
\newcommand{\func}[1]{\texttt{#1}}
\newcommand{\key}[1]{\texttt{#1}}
\newcommand{\type}[1]{\texttt{#1}}
\newcommand{\prog}[1]{\texttt{#1}}
\newcommand{\flag}[1]{\textit{#1}}
\newcommand{\dir}[1]{\texttt{#1}}
\newcommand{\file}[1]{\texttt{#1}}
\newcommand{\var}[1]{\texttt{#1}}
\newcommand{\rem}[1]{\texttt{\textit{#1}}}
\newcommand{\package}[1]{{\textit{#1}}}

% 用于显示终端命令的执行结果
\newenvironment{display}{\def\FrameCommand{\hskip\parindent}%%
\MakeFramed{\advance\hsize-\width\FrameRestore}%%
\vspace*{-2ex}\small\begin{alltt}}%
{\end{alltt}\vspace*{-2ex}\endMakeFramed}

\newenvironment{lbar}[1][]{%
\def\FrameCommand{\rightskip=\parindent\hskip\parindent\vrule width 1pt \hspace{10pt}}%
\MakeFramed{\rightskip=\parindent\advance\hsize-\width\FrameRestore\noindent\hskip-0.6ex}%
{%
\ifthenelse{\equal{#1}{}}{}{\hskip0.6ex\normalfont\myfamily\myheadseries{#1}\\\\}}%
}%
{\endMakeFramed}

% 显示一个向左的箭头
\newcommand{\coderemark}[1]{\sffamily\normalfont\qquad$\leftarrow \textit{\footnotesize #1}$}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
tcolorbox
customHeadersFooters
fix-cm
multicol
notice
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman 新宋体
\font_sans 新宋体
\font_typewriter 新宋体
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dad3d7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
lyx的文字样式
\end_layout

\begin_layout Standard
类似于Word这样的工具很容易给用户养成一个不好的习惯：很随意的设置文本的格式，这会导致交流的障碍：谁不也知道随意设置的文本格式具体代表作者的啥心情。对于作者而
言，随意的设置文本格式也很难保持文章的一致性。如果文章很长，这种随意的设置也是一件苦差事，摆脱痛苦的方式就是使用样式。
\end_layout

\begin_layout Standard
对于lyx而言，文本的样式分为三类：标题、段落和文字。标题和段落的样式已经很明确了，参见图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:lyx的标题和段落样式"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 0
placement r
overhang 0in
width "30line%"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/lyx_section_para_style.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
lyx的标题和段落样式
\begin_inset CommandInset label
LatexCommand label
name "fig:lyx的标题和段落样式"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
对于文字的样式，大家通常的做法是选择一段或者几个文字，然后设置文字的大小、粗细、颜色等等，这是对文字展现细节的描述，比如我们通常希望对于文中需要重点解释的名字黑
体、粗体展示，如果文中有不少这样的名词，每次都分别设置文字的黑体、粗体是很麻烦的事情，合理的做法是定义一个“名词”的样式，然后使用这个样式格式化需要解释的名词。
\end_layout

\begin_layout Standard
本文重点说明lyx中的文字样式设置和定制方法。
\end_layout

\begin_layout Section
使用logicial markup模块
\end_layout

\begin_layout Standard
lyx中的文字样式是通过
\begin_inset Flex Noun
status open

\begin_layout Plain Layout
logical markup模块
\end_layout

\end_inset

实现的，因此必须首先要导入这个模块，方法是菜单：文档->首选项->模块 找到logical markup并添加进来，如图所示。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/lyx_load_logicial_markup_module.ps
	width 80line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
加载logical markup模块
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
logical markup模块提供了基本的字体样式可以选用：代码、强调、名词、strong，可以在选择文字以后的右键弹出菜单或者“编辑”菜单的文本样式进行设置
。
\end_layout

\begin_layout Section
创建自己的文本样式
\end_layout

\begin_layout Standard
如果lyx中自带的文本样式模块不能满足要求，lyx也允许创建自己的文本样式，但这不是一个非常简单和直观的事情。不过，通过不断的积累，拥有自己的文本样式体系也是一
件颇有成就感的事情，不是吗？
\end_layout

\begin_layout Standard
下面是一个简单的文本样式的代码，复制到$HOME/.lyx/layouts/目录下即可：
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/subaochen/git/lyx-modules/samplecharstyle.module"
lstparams "caption={lyx文本样式示例模块}"

\end_inset


\end_layout

\begin_layout Standard
更多代码请移步到：
\begin_inset CommandInset href
LatexCommand href
name "https://github.com/subaochen/lyx-modules"
target "https://github.com/subaochen/lyx-modules"

\end_inset


\end_layout

\begin_layout Standard
更详细的创建自定义模块的方式参见Lyx的帮助文档：定制Lyx。
\end_layout

\end_body
\end_document
