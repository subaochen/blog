#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\input{/home/subaochen/git/writing-common/article-preamble.tex}
\end_preamble
\use_default_options true
\begin_modules
coderemarks
tip-inset
note-inset
warning-inset
theorems-bytype
logicalmkup
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "DejaVu Sans"
\font_sans "default" "DejaVu Serif"
\font_typewriter "default" "DejaVu Sans Mono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command bibtex8
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style IEEETranS
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #c3c3c3
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
redis集群基准测试
\end_layout

\begin_layout Section
测试目的
\end_layout

\begin_layout Standard
了解redis集群的写性能表现，并分析其性能瓶颈，找出相应的解决方案。
\begin_inset Note Note
status open

\begin_layout Plain Layout
测试2个字节的情形意义大吗？测试数据尺寸从10开始还是从2开始比较合适？
\end_layout

\end_inset


\end_layout

\begin_layout Standard
redis集群属于数据分片处理的集群模式，因此从理论上讲rdis集群的写性能不会高于单个redis服务的性能，并且由于集群相关参数的计算更会导致redis集群的
写性能明显低于单个redis服务。本项测试旨在验证此观点，并获得第一手数据以指导实际的redis集群部署。
\end_layout

\begin_layout Section
测试环境
\end_layout

\begin_layout Subsection
硬件环境
\end_layout

\begin_layout Standard
redis服务器的配置和测试环境见
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tablename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:redis服务器配置表"

\end_inset

。
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="10text%">
<column alignment="center" valignment="top" width="20text%">
<column alignment="center" valignment="top" width="45text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
项目
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
配置
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
说明
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CPU
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AMD FX-8150@3.6G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
内存
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DDR3 8G@800M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
redis参数
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
禁止save和aof操作
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
防止存储到磁盘时导致redis性能下降
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
禁止THP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
遵守redis启动时的提示
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
修复overcommit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
vm.overcommit_memory = 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
修复tcp backlog设置
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
net.core.somaxconn = 512
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
网卡
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
交换机
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000M傻瓜式交换机
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
redis服务器和测试环境配置表
\begin_inset CommandInset label
LatexCommand label
name "tab:redis服务器配置表"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
redis集群环境搭建参见：
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://dz.sdut.edu.cn/blog/subaochen/2017/05/redis%E9%9B%86%E7%BE%A4%E7%9A%84%E7%AE
%80%E5%8D%95%E6%B5%8B%E8%AF%95/
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
测试软件
\end_layout

\begin_layout Standard
本案例采用两种方式对redis集群进行基准测试：
\end_layout

\begin_layout Enumerate
采用jedis 2.9作为访问redis集群的smart client，同时采用jedis-benchmark作为基准测试工具。由于原jedis-benchmar
k不支持redis集群操作，因此对jedis-benchmark进行一定的二次开发，参见：
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/subaochen/jedis-benchmark
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
使用curberus作为访问redis集群的代理，并使用标准的redis-benchmark进行基准测试。
\end_layout

\begin_layout Section
SET指令基准测试
\end_layout

\begin_layout Subsection
测试说明
\end_layout

\begin_layout Standard
由于目标应用是写密集型的，因此本测试只针对SET指令，每次测试发起50个线程，总共进行100000次写数据测试，尝试测试数据尺寸从2个字节按照10%的增长率递进
到30000个字节，直到吞吐率低于5000为止。
\end_layout

\begin_layout Standard
限于测试服务器的内存为8G，将测试数据控制在100000次，以防止内存溢出造成测试中断。
\end_layout

\begin_layout Standard
redis集群对pipeline操作的要求非常苛刻，以至于在实际应用中很难将pipeline用于集群，因此本案例没有对集群环境下的pipeline效果进行测试。
\end_layout

\begin_layout Subsection
测试结果及其说明
\end_layout

\begin_layout Standard
如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:redis集群基准测试"

\end_inset

所示，本案例测试了redis集群在loopback和1000M网络情况下的吞吐率和测试数据尺寸之间的关系，同时和单服务器环境下的1000M网络下的性能做了一个比
较。4条曲线的意义如下：
\end_layout

\begin_layout Itemize
tcpip 1000M single：不启用redis集群时情形
\end_layout

\begin_layout Itemize
loopback cluster：启用redis集群，使用jedis并通过loopback访问redis集群，基本参数设置：java -Xms500M
 -Xmx2048M -jar target/jedis-benchmark-1.0-jar-with-dependencies.jar -h 127.0.0.1
 -p 6382 -n 100000 -t 50 -c 50 -s 6488 -g 1
\end_layout

\begin_layout Itemize
tcpip 1000M cluster with jedis，启用redis集群，使用jedis通过1000M网络访问redis集群，基本参数设置：java
 -Xms500M -Xmx2048M -jar target/jedis-benchmark-1.0-jar-with-dependencies.jar
 -h 192.168.1.215 -p 6382 -n 100000 -t 50 -c 50 -s 6488 -g 1
\end_layout

\begin_layout Itemize
tcpip 1000M cluster with curberus，启用redis集群，通过curberus代理并通过1000M网络访问redis集群，基本参数
设置：redis-benchmark -p 8889 ......
\end_layout

\begin_layout Itemize
tcpip 1000M cluster with jedis-curberus，启用redis集群，使用jedis通过curberus并通过1000M网络访问r
edis集群，基本参数设置：java -Xms500M -Xmx2048M -jar target/jedis-benchmark-1.0-jar-with-de
pendencies.jar -h 192.168.1.215 -p 6382 -n 100000 -t 50 -c 50 -s 6488 -g 1 -x
 8889
\end_layout

\begin_layout Standard
可以看出，
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
同样的1000M网络环境，使用jedis smart client访问redis集群的SET性能大约为单服务器的一半左右
\end_layout

\end_inset

，使用curberus代理访问redis集群的性能几乎没有损失。如果客户端编程不是用Java，建议使用curberus代理访问redis集群；如果客户端编程使用
Java，则Jedis可能更方便一些。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/database/jedis-benchmark-set.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
redis集群基准测试
\begin_inset CommandInset label
LatexCommand label
name "fig:redis集群基准测试"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
