#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
\input{/home/subaochen/git/writing-common/article-preamble.tex}
\end_preamble
\use_default_options true
\begin_modules
coderemarks
tip-inset
note-inset
warning-inset
theorems-bytype
logicalmkup
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "DejaVu Sans"
\font_sans "default" "DejaVu Serif"
\font_typewriter "default" "DejaVu Sans Mono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command bibtex8
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style IEEETranS
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #c3c3c3
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Redis集群稳定性测试
\end_layout

\begin_layout Section
测试目的
\end_layout

\begin_layout Standard
考察Redis集群和主从结构在长期运行中的稳定性，主要测试以下几个方面：
\end_layout

\begin_layout Itemize
redis集群的稳定性，包括master/slave的failover。
\end_layout

\begin_layout Itemize
redis的C++客户端xredis的稳定性。
\end_layout

\begin_layout Itemize
redis的java客户端jedis的稳定性(版本号：2.9)。
\end_layout

\begin_layout Section
测试环境
\end_layout

\begin_layout Subsection
硬件环境
\end_layout

\begin_layout Standard
使用了两台服务器，如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tablename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:测试服务器列表"

\end_inset

所示。
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
服务器
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
配置
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
说明
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
redis服务器
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4G内存
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
运行于phabricator主机
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
客户端服务器
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4G内存
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
运行于softlab主机
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
测试服务器列表
\begin_inset CommandInset label
LatexCommand label
name "tab:测试服务器列表"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
软件环境
\end_layout

\begin_layout Standard
由于redis自带的benchmark工具redis-benchmark不支持redis cluster
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
参见：
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://stackoverflow.com/questions/31562661/redis-cluster-mode-slower-than-standa
lone
\end_layout

\end_inset

，作者准备给redis-benchmark增加集群支持，但是检查redis-4.0.3依然没有任何改进，所以等待redis-benchmark支持集群不是一个好主意
。
\end_layout

\end_inset

，因此本案例的benchmark工具只能自己编写：
\end_layout

\begin_layout Itemize
C++测试程序由山东智洋公司提供，使用xredis作为访问redis cluster的smart client。
\end_layout

\begin_layout Itemize
Java测试程序本人编写，使用jedis作为访问redis cluster的smart client，jedis-benchmark作为基本的benchmark
测试工具。
\end_layout

\begin_layout Itemize
redis cluster有3个master节点和3个slave节点组成。
\end_layout

\begin_layout Standard
软件环境中需要特别解决的问题：
\end_layout

\begin_layout Itemize
jedis客户端停止运行的时候，能够记录停止的时间
\end_layout

\begin_layout Itemize
能够给出jedis停止运行的原因分析
\end_layout

\begin_layout Section
测试步骤
\end_layout

\begin_layout Subsection
安装和配置redis集群环境
\end_layout

\begin_layout Standard
从源代码安装redis-3.2.8，过程参见
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://dz.sdut.edu.cn/blog/subaochen/2017/05/redis%E9%9B%86%E7%BE%A4%E7%9A%84%E7%AE
%80%E5%8D%95%E6%B5%8B%E8%AF%95/
\end_layout

\end_inset

。
\end_layout

\begin_layout Standard
redis源代码中附带了创建测试集群的工具，进入utils/create-cluster目录，修改create-cluster脚本，主要的改动如下：
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=bash"
inline false
status open

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

# Settings
\end_layout

\begin_layout Plain Layout

HOST=xxx.xxx.xxx.xxx
\end_layout

\begin_layout Plain Layout

PORT=6380
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

../../src/redis-server --port $PORT --bind $HOST --cluster-enabled yes --cluster-con
fig-file nodes-${PORT}.conf --cluster-node-timeout $TIMEOUT --appendonly
 no --appendfilename appendonly-${PORT}.aof --dbfilename dump-${PORT}.rdb
 --logfile ${PORT}.log --daemonize yes
\end_layout

\end_inset


\end_layout

\begin_layout Standard
然后执行如下的命令创建redis测试集群：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
$ create-cluster start
\end_layout

\begin_layout Plain Layout
$ create-cluster create
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
安装和配置redis客户端环境
\end_layout

\begin_layout Subsubsection
Java测试客户端
\end_layout

\begin_layout Standard
jedis-benchmark安装与softlab服务器的/root/jedis-benchmark目录，jedis-benchmark.sh脚本作为基准测试之用
，然后使用benchmark.sh进行稳定性测试，脚本如下：
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#!/usr/bin/env bash
\end_layout

\begin_layout Plain Layout

while true
\end_layout

\begin_layout Plain Layout

do
\end_layout

\begin_layout Plain Layout

    DATE=`date +%Y%m%d`
\end_layout

\begin_layout Plain Layout

    file=benchmark-$DATE.log
\end_layout

\begin_layout Plain Layout

    if [ -f $file ]; then
\end_layout

\begin_layout Plain Layout

        rm $file
\end_layout

\begin_layout Plain Layout

    fi
\end_layout

\begin_layout Plain Layout

    ./jedis-benchmark.sh  > $file
\end_layout

\begin_layout Plain Layout

    if [ $? = -100 ]; then
\end_layout

\begin_layout Plain Layout

        echo "jedis benchmark failed, please log into softlab to check"
 | mail -s "jedis benchmark failed!" subaochen@126.com
\end_layout

\begin_layout Plain Layout

        exit;
\end_layout

\begin_layout Plain Layout

    fi
\end_layout

\begin_layout Plain Layout

done
\end_layout

\end_inset


\end_layout

\begin_layout Standard
当jedis客户端的稳定性出任何问题会导致jedis-benchmark.sh脚本在进行benchmark时无法获取吞吐率（tps）从而退出benchmark测试
，脚本自动发送邮件到我的邮箱，因此如果收到了测试失败的邮件就证明jedis或者redis出问题了，这是稳定性测试的基本原理。
\end_layout

\begin_layout Subsubsection
C++测试客户端
\end_layout

\begin_layout Section
测试方法和结果
\end_layout

\begin_layout Standard
本案例的测试方法是采用长期运行合适负载的benchmark，以观察Redis集群及其客户端是否满足实用要求。因为本测试中的redis服务器集群的配置较低，因此并
没有对redis服务器施以满负载测试，以保障测试的顺利进行，毕竟本次测试的主要目的是考察redis的客户端稳定性，而不是服务器的稳定性。
\end_layout

\begin_layout Subsection
jedis测试结果及其解读
\end_layout

\begin_layout Standard
测试起点：Sun May 14 11:23:48 CST 2017
\end_layout

\begin_layout Standard
测试终点：Fri May 19 17:14:24 CST 2017
\end_layout

\begin_layout Standard
测试轮次：55518
\end_layout

\begin_layout Standard
每轮次请求数：10000
\end_layout

\begin_layout Standard
每轮次线程数：1000
\end_layout

\begin_layout Standard
测试完毕redis的info stats结果：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
# Stats
\end_layout

\begin_layout Plain Layout
total_connections_received:304632156
\end_layout

\begin_layout Plain Layout
total_commands_processed:2858332955
\end_layout

\begin_layout Plain Layout
instantaneous_ops_per_sec:2899
\end_layout

\begin_layout Plain Layout
total_net_input_bytes:1486568827394
\end_layout

\begin_layout Plain Layout
total_net_output_bytes:2400507283883
\end_layout

\begin_layout Plain Layout
instantaneous_input_kbps:1471.66
\end_layout

\begin_layout Plain Layout
instantaneous_output_kbps:1472.32
\end_layout

\begin_layout Plain Layout
rejected_connections:0
\end_layout

\begin_layout Plain Layout
sync_full:1
\end_layout

\begin_layout Plain Layout
sync_partial_ok:0
\end_layout

\begin_layout Plain Layout
sync_partial_err:0
\end_layout

\begin_layout Plain Layout
expired_keys:0
\end_layout

\begin_layout Plain Layout
evicted_keys:0
\end_layout

\begin_layout Plain Layout
keyspace_hits:0
\end_layout

\begin_layout Plain Layout
keyspace_misses:0
\end_layout

\begin_layout Plain Layout
pubsub_channels:0
\end_layout

\begin_layout Plain Layout
pubsub_patterns:0
\end_layout

\begin_layout Plain Layout
latest_fork_usec:2849
\end_layout

\begin_layout Plain Layout
migrate_cached_sockets:0
\end_layout

\end_inset


\end_layout

\begin_layout Standard
测试结束时客户端的内存、cpu等负载情况如
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
figurename
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:稳定性测试结束时的客户端情形"

\end_inset

所示。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/database/jedis稳定性测试客户端分析图-201705191713.png
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
稳定性测试结束时的客户端情形
\begin_inset CommandInset label
LatexCommand label
name "fig:稳定性测试结束时的客户端情形"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
结果解读
\end_layout

\begin_layout Standard
可以看出，在持续125小时的测试过程中，redis客户端jedis未见明显的内存泄漏、性能下降等异常，期间向redis服务器集群发送了3亿多条数据请求均得到了处
理，共发送数据包1486G，共接受数据包2400G，redis服务器没有拒绝服务现象。
\end_layout

\begin_layout Standard
\begin_inset Flex Strong
status open

\begin_layout Plain Layout
结论：jedis作为redis的Java客户端是值得信赖的。
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
xredis测试结果
\end_layout

\end_body
\end_document
