#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ctex-article
\begin_preamble
%%%%%%%%%%%%%%%%%%                                                                                                                                                           

%中文断行
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt 

% 标题左对齐
\usepackage[raggedright]{titlesec} 

% 页边距设置
\usepackage[top=1.2in,bottom=1.2in,left=1.2in,right=1in]{geometry}
% 页眉页脚设置
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}                                                  % 清空页眉页脚
\fancyhead[LE,RO]{\thepage}                                 % 偶数页左,奇数页右
\fancyhead[RE]{\leftmark}                                   % 偶数页右
\fancyhead[LO]{\rightmark}                                  % 奇数页左
\fancypagestyle{plain}{
    \fancyhf{}                                                  % 重定义plain页面样式
    \renewcommand{\headrulewidth}{0pt}
}


\usepackage{listings}
\usepackage{color}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\AtBeginDocument{\renewcommand\lstlistingname{代码清单}}

 
\lstset{%
        language=Java,%
        float=hbp,%
        basicstyle=\footnotesize\ttfamily,%
        identifierstyle=\color{colIdentifier},%
        keywordstyle=\color{colKeys},%
        stringstyle=\color{colString},%
        commentstyle=\itshape\color{colComments},%
        columns=fixed,
        tabsize=4,%
        frame=tb,% 顶部和底部加横线
        %frame=shadowbox,
        framerule=1pt,
        framexleftmargin=2em, % 行号包含在代码区域内
        extendedchars=false,%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题                                                                              
        showspaces=false,%
        showstringspaces=false,%
        numbers=left,%
        numberstyle=\tiny\ttfamily,%
        numbersep=1em,%
        breaklines=true,%
        breakindent=10pt,%
        backgroundcolor=\color{hellgelb},%
        breakautoindent=true,%
        captionpos=t,%
        xleftmargin=1em,%
        xrightmargin=\fboxsep,
        escapechar=|
} 


\usepackage{tikz}
\usepackage{ifthen}
\usepackage{alltt}
% Optional PGF libraries
\usepackage{pgflibraryarrows}
\usepackage{pgflibrarysnakes}

%% Style commands
\newcommand{\func}[1]{\texttt{#1}}
\newcommand{\key}[1]{\texttt{#1}}
\newcommand{\type}[1]{\texttt{#1}}
\newcommand{\prog}[1]{\texttt{#1}}
\newcommand{\flag}[1]{\textit{#1}}
\newcommand{\dir}[1]{\texttt{#1}}
\newcommand{\file}[1]{\texttt{#1}}
\newcommand{\var}[1]{\texttt{#1}}
\newcommand{\rem}[1]{\texttt{\textit{#1}}}
\newcommand{\package}[1]{{\textit{#1}}}

% 用于显示终端命令的执行结果
\newenvironment{display}{\def\FrameCommand{\hskip\parindent}%%
\MakeFramed{\advance\hsize-\width\FrameRestore}%%
\vspace*{-2ex}\small\begin{alltt}}%
{\end{alltt}\vspace*{-2ex}\endMakeFramed}

\newenvironment{lbar}[1][]{%
\def\FrameCommand{\rightskip=\parindent\hskip\parindent\vrule width 1pt \hspace{10pt}}%
\MakeFramed{\rightskip=\parindent\advance\hsize-\width\FrameRestore\noindent\hskip-0.6ex}%
{%
\ifthenelse{\equal{#1}{}}{}{\hskip0.6ex\normalfont\myfamily\myheadseries{#1}\\\\}}%
}%
{\endMakeFramed}

% 显示一个向左的箭头
\newcommand{\coderemark}[1]{\sffamily\normalfont\qquad$\leftarrow \textit{\footnotesize #1}$}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
multicol
notice
coderemarks
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman "default" "新宋体"
\font_sans "default" "新宋体"
\font_typewriter "default" "新宋体"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dad3d7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Netbeans的JPA Modeler插件介绍
\end_layout

\begin_layout Standard
观看了
\begin_inset CommandInset href
LatexCommand href
name "JPA Modeler"
target "http://jpamodeler.github.io/"

\end_inset

演示视频，貌似棒极了，于是装起来体验了一把，下面是体验记录，好不好各位自己判断:-)
\end_layout

\begin_layout Section
安装
\end_layout

\begin_layout Standard
从Netbeans的插件中心选择安装即可，不再赘述。
\end_layout

\begin_layout Section
创建数据库的结构图（E-R图）
\begin_inset CommandInset label
LatexCommand label
name "sec:创建数据库的结构图（E-R图）"

\end_inset


\end_layout

\begin_layout Standard
新建一个数据库结构图，如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:准备新建数据库的结构图"

\end_inset

所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-1.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
准备新建数据库的结构图
\begin_inset CommandInset label
LatexCommand label
name "fig:准备新建数据库的结构图"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
简单的拖拖拉拉后，就创建好了数据库的结构图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:创建好的数据库结构图"

\end_inset

了：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-2.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
创建好的数据库结构图
\begin_inset CommandInset label
LatexCommand label
name "fig:创建好的数据库结构图"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
常见的，需要对外键或者引用特别设置一下，主要是比如Student中的courses引用，一般需要设置为lazy加载CascadeType为All，如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:设置外部引用的属性"

\end_inset

所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-3.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
设置外部引用的属性
\begin_inset CommandInset label
LatexCommand label
name "fig:设置外部引用的属性"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
同样的道理，将id字段的Id Generator设置为Auto，如图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-5.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
id generator设置为Auto
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
这是面向对象的方式的数据表结构设计，看一下真实的数据库长的什么样子：右键选择Generate Source Code：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-4.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
生成Entity代码
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
检查一下生成的两个Entity类，还不错：
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

@Entity
\end_layout

\begin_layout Plain Layout

public class Student implements Serializable {
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY, targetEntity
 = Course.class)
\end_layout

\begin_layout Plain Layout

  private List<Course> courses;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @Basic
\end_layout

\begin_layout Plain Layout

  private String password;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @Id
\end_layout

\begin_layout Plain Layout

  @GeneratedValue(strategy = GenerationType.AUTO)
\end_layout

\begin_layout Plain Layout

  private Long id;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @Basic
\end_layout

\begin_layout Plain Layout

  private String email;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @Basic
\end_layout

\begin_layout Plain Layout

  private String username;
\end_layout

\begin_layout Plain Layout

......
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@Entity
\end_layout

\begin_layout Plain Layout

public class Course implements Serializable {
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @Basic
\end_layout

\begin_layout Plain Layout

  private String name;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  @Column(unique = true)
\end_layout

\begin_layout Plain Layout

  @Id
\end_layout

\begin_layout Plain Layout

  @GeneratedValue(strategy = GenerationType.AUTO)
\end_layout

\begin_layout Plain Layout

  private Long id;
\end_layout

\begin_layout Plain Layout

......
\end_layout

\end_inset


\end_layout

\begin_layout Standard
右键选择“Visualize DB”，即可看到真实的数据表是什么样子了：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-6.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Visualize DB
\begin_inset CommandInset label
LatexCommand label
name "fig:Visualize-DB"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
在图所示的界面右键选择“View SQL”即可查看生成数据库的SQL了：
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

CREATE TABLE STUDENT_COURSE (Student_ID BIGINT NOT NULL, courses_ID BIGINT
 NOT NULL, PRIMARY KEY (Student_ID, courses_ID));
\end_layout

\begin_layout Plain Layout

CREATE TABLE STUDENT (ID BIGINT NOT NULL, EMAIL VARCHAR(255), PASSWORD VARCHAR(2
55), USERNAME VARCHAR(255), PRIMARY KEY (ID));
\end_layout

\begin_layout Plain Layout

CREATE TABLE COURSE (ID BIGINT NOT NULL, NAME VARCHAR(255), PRIMARY KEY
 (ID));
\end_layout

\begin_layout Plain Layout

ALTER TABLE STUDENT_COURSE ADD CONSTRAINT FK_STUDENT_COURSE_courses_ID FOREIGN
 KEY (courses_ID) REFERENCES COURSE (ID);
\end_layout

\begin_layout Plain Layout

ALTER TABLE STUDENT_COURSE ADD CONSTRAINT FK_STUDENT_COURSE_Student_ID FOREIGN
 KEY (Student_ID) REFERENCES STUDENT (ID);
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
从数据库创建结构图
\end_layout

\begin_layout Standard
如果数据已经存在了，JPA Modeler可以读取数据库并自动创建ER图，只需要在选择新建持续层时，从数据库创建即可，见图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:从数据库创建持续层"

\end_inset

：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/tools/jpa-modeler-new-scheme-7.png
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
从数据库创建持续层
\begin_inset CommandInset label
LatexCommand label
name "fig:从数据库创建持续层"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
然后一步一步的创建数据库连接读取数据库，获得的数据库结构图和
\begin_inset CommandInset ref
LatexCommand nameref
reference "sec:创建数据库的结构图（E-R图）"

\end_inset

部分的差不多，就不再赘述了。
\end_layout

\end_body
\end_document
