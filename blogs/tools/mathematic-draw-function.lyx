#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ctex-article
\begin_preamble
%%%%%%%%%%%%%%%%%%                                                                                                                                                           

%中文断行
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt 

% 标题左对齐
\usepackage[raggedright]{titlesec} 

% 页边距设置
\usepackage[top=1.2in,bottom=1.2in,left=1.2in,right=1in]{geometry}
% 页眉页脚设置
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}                                                  % 清空页眉页脚
\fancyhead[LE,RO]{\thepage}                                 % 偶数页左,奇数页右
\fancyhead[RE]{\leftmark}                                   % 偶数页右
\fancyhead[LO]{\rightmark}                                  % 奇数页左
\fancypagestyle{plain}{
    \fancyhf{}                                                  % 重定义plain页面样式
    \renewcommand{\headrulewidth}{0pt}
}


\usepackage{listings}
\usepackage{color}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\AtBeginDocument{\renewcommand\lstlistingname{代码清单}}

 
\lstset{%
        language=Java,%
        float=hbp,%
        basicstyle=\footnotesize\ttfamily,%
        identifierstyle=\color{colIdentifier},%
        keywordstyle=\color{colKeys},%
        stringstyle=\color{colString},%
        commentstyle=\itshape\color{colComments},%
        columns=fixed,
        tabsize=4,%
        frame=tb,% 顶部和底部加横线
        %frame=shadowbox,
        framerule=1pt,
        framexleftmargin=2em, % 行号包含在代码区域内
        extendedchars=false,%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题                                                                              
        showspaces=false,%
        showstringspaces=false,%
        numbers=left,%
        numberstyle=\tiny\ttfamily,%
        numbersep=1em,%
        breaklines=true,%
        breakindent=10pt,%
        backgroundcolor=\color{hellgelb},%
        breakautoindent=true,%
        captionpos=t,%
        xleftmargin=1em,%
        xrightmargin=\fboxsep,
        escapechar=|
} 


\usepackage{tikz}
\usepackage{ifthen}
\usepackage{alltt}
% Optional PGF libraries
\usepackage{pgflibraryarrows}
\usepackage{pgflibrarysnakes}

%% Style commands
\newcommand{\func}[1]{\texttt{#1}}
\newcommand{\key}[1]{\texttt{#1}}
\newcommand{\type}[1]{\texttt{#1}}
\newcommand{\prog}[1]{\texttt{#1}}
\newcommand{\flag}[1]{\textit{#1}}
\newcommand{\dir}[1]{\texttt{#1}}
\newcommand{\file}[1]{\texttt{#1}}
\newcommand{\var}[1]{\texttt{#1}}
\newcommand{\rem}[1]{\texttt{\textit{#1}}}
\newcommand{\package}[1]{{\textit{#1}}}

% 用于显示终端命令的执行结果
\newenvironment{display}{\def\FrameCommand{\hskip\parindent}%%
\MakeFramed{\advance\hsize-\width\FrameRestore}%%
\vspace*{-2ex}\small\begin{alltt}}%
{\end{alltt}\vspace*{-2ex}\endMakeFramed}

\newenvironment{lbar}[1][]{%
\def\FrameCommand{\rightskip=\parindent\hskip\parindent\vrule width 1pt \hspace{10pt}}%
\MakeFramed{\rightskip=\parindent\advance\hsize-\width\FrameRestore\noindent\hskip-0.6ex}%
{%
\ifthenelse{\equal{#1}{}}{}{\hskip0.6ex\normalfont\myfamily\myheadseries{#1}\\\\}}%
}%
{\endMakeFramed}

% 显示一个向左的箭头
\newcommand{\coderemark}[1]{\sffamily\normalfont\qquad$\leftarrow \textit{\footnotesize #1}$}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
multicol
notice
coderemarks
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman 新宋体
\font_sans 新宋体
\font_typewriter 新宋体
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dad3d7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Mathematica画图
\end_layout

\begin_layout Section
Mathemataica语法概要
\end_layout

\begin_layout Standard
Mathematica语法和matlab还是有一些差别的，主要注意一下几点：
\end_layout

\begin_layout Itemize
所有函数都是大写字母开头的，比如Sin,Pi。
\end_layout

\begin_layout Itemize
函数的参数列表使用方括号。
\end_layout

\begin_layout Section
画散列点
\end_layout

\begin_layout Standard
散列点的数据可以从csv，xls等导入：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
data=Import[
\begin_inset Quotes eld
\end_inset

/home/subaochen/docs/test.xlsx
\begin_inset Quotes erd
\end_inset

]
\end_layout

\begin_layout Plain Layout
{{{0.2, 1.8}, {0.65, 3.6}, {1.13, 5.4}, {2.55, 7.2}, {4., 9.}, {5.75, 
\end_layout

\begin_layout Plain Layout
10.8}, {7.8, 12.6}, {10.2, 14.4}, {12.9, 16.2}, {16., 18.}, {18.4, 
\end_layout

\begin_layout Plain Layout
19.8}}}
\end_layout

\begin_layout Plain Layout
ListPlot[data]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
效果大致如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:散列点"

\end_inset

所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/scatter-mm.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
散列点
\begin_inset CommandInset label
LatexCommand label
name "fig:散列点"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
但是在线性或者非线性回归分析时，导入的数据总是多了一对{}，需要手工去掉，不知道为什么。
\end_layout

\begin_layout Section
画单个函数
\end_layout

\begin_layout Standard
这个就很直接了，见图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:单个函数的画法"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Plot[Sqrt[1-x],{x,-1,1}]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/single-fucntion-mm.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
单个函数的画法
\begin_inset CommandInset label
LatexCommand label
name "fig:单个函数的画法"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
同时画出多个函数
\end_layout

\begin_layout Standard
同时画出多个函数可以使用Show函数，见图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:同时画出多个函数"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Plot[{2^x, 3^x, 10^x}, {x, -1, 1}, PlotLabels -> "Expressions"]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/multi-functions-mm.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
同时画出多个函数
\begin_inset CommandInset label
LatexCommand label
name "fig:同时画出多个函数"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
坐标轴比例的调整
\end_layout

\begin_layout Standard
如果不定义坐标轴的比例，Mathemataica默认是以黄金分割的比例来显示的，有的时候会造成视觉的误导，比如函数Sqrt(x-1)和x^2+1互为反函数，但是
命令：Plot[{Sqrt[x-1],x^2+1,x},{x,0,2},PlotLabels->“Expressions
\begin_inset Quotes erd
\end_inset

]显示如图
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:没有调整坐标轴时的图形"

\end_inset

所示，显然这样的图形难以说明两个函数关于y=x对称的事实。
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/two-functions-aspection-no-adjust.eps
	width 80line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
没有调整坐标轴时的图形
\begin_inset CommandInset label
LatexCommand label
name "fig:没有调整坐标轴时的图形"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
这个时候需要明确指定坐标轴的比例模式为Automatic：
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Plot[{Sqrt[x - 1], x^2 + 1, x}, {x, 0, 2}, 
\end_layout

\begin_layout Plain Layout
PlotLabels -> "Expressions", AspectRatio -> Automatic]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
显示出来的图形虽然大了些，但是更直观了，如图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/aspect-automatic-pics-mmm.eps
	height 60pheight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
等比例显示的图形
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
遗憾的是，没有找到在哪里设置默认以Automatic的比例模式显示图形？有知道的麻烦告知一下，谢谢！
\end_layout

\begin_layout Section
坐标箭头问题
\end_layout

\begin_layout Standard
通常教材上的直角坐标是带箭头的，而mathematics默认画出的直角坐标是不带箭头的。如果要画出箭头，可以使用AxesStyle -> Arrowheads来
定义箭头的方向和大小，比如：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Plot[1/x, {x, -20, 20}, AxesStyle -> Arrowheads[{0.05, 0.05}]]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ArrowHeads的参数为正表示箭头方向符合常规，数值大小表示箭头的大小。实验表明数值取0.03~0.05时，箭头的大小比较合适，如图所示：
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/subaochen/git/blog/imgs/function-pic-with-arrow.eps
	width 70line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
带箭头的直角坐标系
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
大概这几个函数教高中的孩子画函数图形应该够用了:-)
\end_layout

\end_body
\end_document
