#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ctex-article
\begin_preamble
%%%%%%%%%%%%%%%%%%                                                                                                                                                           

%中文断行
\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt 

% 标题左对齐
\usepackage[raggedright]{titlesec} 

% 页边距设置
\usepackage[top=1.2in,bottom=1.2in,left=1.2in,right=1in]{geometry}
% 页眉页脚设置
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}                                                  % 清空页眉页脚
\fancyhead[LE,RO]{\thepage}                                 % 偶数页左,奇数页右
\fancyhead[RE]{\leftmark}                                   % 偶数页右
\fancyhead[LO]{\rightmark}                                  % 奇数页左
\fancypagestyle{plain}{
    \fancyhf{}                                                  % 重定义plain页面样式
    \renewcommand{\headrulewidth}{0pt}
}


\usepackage{listings}
\usepackage{color}
\definecolor{hellgelb}{rgb}{1,1,0.85}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}
\AtBeginDocument{\renewcommand\lstlistingname{代码清单}}

 
\lstset{%
        language=Java,%
        float=hbp,%
        basicstyle=\footnotesize\ttfamily,%
        identifierstyle=\color{colIdentifier},%
        keywordstyle=\color{colKeys},%
        stringstyle=\color{colString},%
        commentstyle=\itshape\color{colComments},%
        columns=fixed,
        tabsize=4,%
        frame=tb,% 顶部和底部加横线
        %frame=shadowbox,
        framerule=1pt,
        framexleftmargin=2em, % 行号包含在代码区域内
        extendedchars=false,%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题                                                                              
        showspaces=false,%
        showstringspaces=false,%
        numbers=left,%
        numberstyle=\tiny\ttfamily,%
        numbersep=1em,%
        breaklines=true,%
        breakindent=10pt,%
        backgroundcolor=\color{hellgelb},%
        breakautoindent=true,%
        captionpos=t,%
        xleftmargin=1em,%
        xrightmargin=\fboxsep,
        escapechar=|
} 


\usepackage{tikz}
\usepackage{ifthen}
\usepackage{alltt}
% Optional PGF libraries
\usepackage{pgflibraryarrows}
\usepackage{pgflibrarysnakes}

%% Style commands
\newcommand{\func}[1]{\texttt{#1}}
\newcommand{\key}[1]{\texttt{#1}}
\newcommand{\type}[1]{\texttt{#1}}
\newcommand{\prog}[1]{\texttt{#1}}
\newcommand{\flag}[1]{\textit{#1}}
\newcommand{\dir}[1]{\texttt{#1}}
\newcommand{\file}[1]{\texttt{#1}}
\newcommand{\var}[1]{\texttt{#1}}
\newcommand{\rem}[1]{\texttt{\textit{#1}}}
\newcommand{\package}[1]{{\textit{#1}}}

% 用于显示终端命令的执行结果
\newenvironment{display}{\def\FrameCommand{\hskip\parindent}%%
\MakeFramed{\advance\hsize-\width\FrameRestore}%%
\vspace*{-2ex}\small\begin{alltt}}%
{\end{alltt}\vspace*{-2ex}\endMakeFramed}

\newenvironment{lbar}[1][]{%
\def\FrameCommand{\rightskip=\parindent\hskip\parindent\vrule width 1pt \hspace{10pt}}%
\MakeFramed{\rightskip=\parindent\advance\hsize-\width\FrameRestore\noindent\hskip-0.6ex}%
{%
\ifthenelse{\equal{#1}{}}{}{\hskip0.6ex\normalfont\myfamily\myheadseries{#1}\\\\}}%
}%
{\endMakeFramed}

% 显示一个向左的箭头
\newcommand{\coderemark}[1]{\sffamily\normalfont\qquad$\leftarrow \textit{\footnotesize #1}$}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
multicol
notice
coderemarks
\end_modules
\maintain_unincluded_children false
\language chinese-simplified
\language_package default
\inputencoding utf8-plain
\fontencoding global
\font_roman 新宋体
\font_sans 新宋体
\font_typewriter 新宋体
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dad3d7
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
从一个简单的for循环看JS的scope
\end_layout

\begin_layout Section
情形一
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

console.log("initial:" + i); 
\end_layout

\begin_layout Plain Layout

for(var i = 0; i < 10; i++){                                           
                                                                 
\end_layout

\begin_layout Plain Layout

    console.log(i);
\end_layout

\begin_layout Plain Layout

}          
\end_layout

\begin_layout Plain Layout

           
\end_layout

\begin_layout Plain Layout

console.log("and the end:" + i); 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
输出结果为：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
initial:undefined
\end_layout

\begin_layout Plain Layout
0
\end_layout

\begin_layout Plain Layout
1
\end_layout

\begin_layout Plain Layout
2
\end_layout

\begin_layout Plain Layout
3
\end_layout

\begin_layout Plain Layout
4
\end_layout

\begin_layout Plain Layout
5
\end_layout

\begin_layout Plain Layout
6
\end_layout

\begin_layout Plain Layout
7
\end_layout

\begin_layout Plain Layout
8
\end_layout

\begin_layout Plain Layout
9
\end_layout

\begin_layout Plain Layout
and the end:10
\end_layout

\end_inset


\end_layout

\begin_layout Standard
也就是说，在全局作用域中，变量i是存在的，只是第一行显示i的值时，i还没有初始化而已。这要拜var所赐：通过var声明的变量hositing到所在作用域的顶部，
这说明了两个问题：
\end_layout

\begin_layout Enumerate
for循环中的i变量是全局的，这通过最后一个log输出验证了。
\end_layout

\begin_layout Enumerate
for循环中的var i = 0，其实是两条语句：var i; i = 0。否则根据hoisting规则：变量的初始化是不会被hoisted的。
\end_layout

\begin_layout Section
情形二
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

console.log("initial:" + i); 
\end_layout

\begin_layout Plain Layout

for(i = 0; i < 10; i++){                                               
                                                             
\end_layout

\begin_layout Plain Layout

    console.log(i);
\end_layout

\begin_layout Plain Layout

}          
\end_layout

\begin_layout Plain Layout

           
\end_layout

\begin_layout Plain Layout

console.log("and the end:" + i); 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
和情形一唯一的不同点是for循环的i变量没有使用var声明，那么第一行的log输出会导致引用失败：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
(function (exports, require, module, __filename, __dirname) { console.log("initia
l:" + i);
\end_layout

\begin_layout Plain Layout
^
\end_layout

\begin_layout Plain Layout
ReferenceError: i is not defined
\end_layout

\begin_layout Plain Layout
at Object.<anonymous> (/home/subaochen/test/test.js:1:88)
\end_layout

\begin_layout Plain Layout
at Module._compile (module.js:410:26)
\end_layout

\begin_layout Plain Layout
at Object.Module._extensions..js (module.js:417:10)
\end_layout

\begin_layout Plain Layout
at Module.load (module.js:344:32)
\end_layout

\begin_layout Plain Layout
at Function.Module._load (module.js:301:12)
\end_layout

\begin_layout Plain Layout
at Function.Module.runMain (module.js:442:10)
\end_layout

\begin_layout Plain Layout
at startup (node.js:136:18)
\end_layout

\begin_layout Plain Layout
at node.js:966:3
\end_layout

\end_inset


\end_layout

\begin_layout Standard
如果去掉第一行的log输出则程序正常执行，这说明没有通过var声明的js变量自动为全局变量，但是不能hoisting。
\end_layout

\begin_layout Section
情形三
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

console.log("initial:" + i); 
\end_layout

\begin_layout Plain Layout

for(let i = 0; i < 10; i++){                                           
                                                                 
\end_layout

\begin_layout Plain Layout

    console.log(i);
\end_layout

\begin_layout Plain Layout

}          
\end_layout

\begin_layout Plain Layout

           
\end_layout

\begin_layout Plain Layout

console.log("and the end:" + i); 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
在ES6之后引入了let声明块级作用域的变量，因此上面的代码输出为：
\end_layout

\begin_layout Standard
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
for(let i = 0; i < 10; i++){
\end_layout

\begin_layout Plain Layout
^^^
\end_layout

\begin_layout Plain Layout
SyntaxError: Block-scoped declarations (let, const, function, class) not
 yet supported outside strict mode
\end_layout

\begin_layout Plain Layout
at exports.runInThisContext (vm.js:53:16)
\end_layout

\begin_layout Plain Layout
at Module._compile (module.js:374:25)
\end_layout

\begin_layout Plain Layout
at Object.Module._extensions..js (module.js:417:10)
\end_layout

\begin_layout Plain Layout
at Module.load (module.js:344:32)
\end_layout

\begin_layout Plain Layout
at Function.Module._load (module.js:301:12)
\end_layout

\begin_layout Plain Layout
at Function.Module.runMain (module.js:442:10)
\end_layout

\begin_layout Plain Layout
at startup (node.js:136:18)
\end_layout

\begin_layout Plain Layout
at node.js:966:3
\end_layout

\end_inset


\end_layout

\begin_layout Section
小结
\end_layout

\begin_layout Standard
看起来JS到处是陷阱，但只要理解了JS的作用域和hoisting原理，一切都迎刃而解。JS的作用域在ES6之前只有global scope和function
 scope，ES6之后引入了block scope（通过let），通过var声明的变量和function声明会自动hoisting到当前作用域的顶部，这就是J
S作用域的关键内容。
\end_layout

\end_body
\end_document
